{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{useAuth}from'../../contexts/AuthContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminPanel=()=>{var _user$email;const navigate=useNavigate();const{user}=useAuth();const[users,setUsers]=useState([]);const[regionalData,setRegionalData]=useState(null);const[selectedRegion,setSelectedRegion]=useState('');const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[successMessage,setSuccessMessage]=useState(null);// Check if user is an admin based on email domain\nconst isAdmin=(user===null||user===void 0?void 0:(_user$email=user.email)===null||_user$email===void 0?void 0:_user$email.endsWith('@admin.blooddonationawareness.org'))||false;useEffect(()=>{// Redirect if not logged in or not an admin\nif(!loading&&(!user||!isAdmin)){navigate('/login');}},[user,loading,navigate,isAdmin]);useEffect(()=>{const fetchData=async()=>{try{setLoading(true);// In a real implementation, these would be actual API calls to Supabase\n// For demo purposes, we're using mock data\n// Mock users data\nconst mockUsers=[{id:'1',email:'user1@example.com',blood_type:'A+',donation_count:3,last_donation_date:'2023-01-15'},{id:'2',email:'user2@example.com',blood_type:'O-',donation_count:5,last_donation_date:'2023-02-22'},{id:'3',email:'user3@example.com',blood_type:'B+',donation_count:0,last_donation_date:null},{id:'4',email:'user4@example.com',blood_type:'AB+',donation_count:2,last_donation_date:'2023-03-10'},{id:'5',email:'user5@example.com',blood_type:null,donation_count:0,last_donation_date:null}];setUsers(mockUsers);// Mock regional data for Israel\nsetRegionalData({region:'Israel',a_positive:34.0,a_negative:4.0,b_positive:17.0,b_negative:2.0,ab_positive:7.0,ab_negative:1.0,o_positive:32.0,o_negative:3.0});setSelectedRegion('Israel');}catch(err){setError('Failed to fetch data');console.error(err);}finally{setLoading(false);}};if(user&&isAdmin){fetchData();}},[user,isAdmin]);const handleUpdateRegionalData=e=>{e.preventDefault();// In a real implementation, this would update the data in Supabase\nsetSuccessMessage('Regional data updated successfully!');// Clear success message after 3 seconds\nsetTimeout(()=>{setSuccessMessage(null);},3000);};const handleInputChange=(field,value)=>{if(regionalData){setRegionalData({...regionalData,[field]:parseFloat(value)||0});}};if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading admin panel...\"});}if(!user||!isAdmin){return/*#__PURE__*/_jsx(\"div\",{children:\"Access denied. This page is only available to administrators.\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"admin-panel\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Admin Panel\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),successMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"success-message\",children:successMessage}),/*#__PURE__*/_jsxs(\"section\",{className:\"admin-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"User Management\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Total users: \",users.length]}),/*#__PURE__*/_jsxs(\"table\",{className:\"admin-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Blood Type\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Donations\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Last Donation\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:users.map(user=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:user.id}),/*#__PURE__*/_jsx(\"td\",{children:user.email}),/*#__PURE__*/_jsx(\"td\",{children:user.blood_type||'Not set'}),/*#__PURE__*/_jsx(\"td\",{children:user.donation_count}),/*#__PURE__*/_jsx(\"td\",{children:user.last_donation_date?new Date(user.last_donation_date).toLocaleDateString():'Never'}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"admin-button\",children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{className:\"admin-button delete\",children:\"Delete\"})]})]},user.id))})]})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"admin-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Regional Data Management\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"region-selector\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"region-select\",children:\"Select Region:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"region-select\",value:selectedRegion,onChange:e=>setSelectedRegion(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"Israel\",children:\"Israel\"}),/*#__PURE__*/_jsx(\"option\",{value:\"United States\",children:\"United States\"}),/*#__PURE__*/_jsx(\"option\",{value:\"United Kingdom\",children:\"United Kingdom\"}),/*#__PURE__*/_jsx(\"option\",{value:\"India\",children:\"India\"})]})]}),regionalData&&/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleUpdateRegionalData,className:\"regional-data-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"a_positive\",children:\"A+:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"a_positive\",value:regionalData.a_positive,onChange:e=>handleInputChange('a_positive',e.target.value),step:\"0.1\",min:\"0\",max:\"100\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"a_negative\",children:\"A-:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"a_negative\",value:regionalData.a_negative,onChange:e=>handleInputChange('a_negative',e.target.value),step:\"0.1\",min:\"0\",max:\"100\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"b_positive\",children:\"B+:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"b_positive\",value:regionalData.b_positive,onChange:e=>handleInputChange('b_positive',e.target.value),step:\"0.1\",min:\"0\",max:\"100\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"b_negative\",children:\"B-:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"b_negative\",value:regionalData.b_negative,onChange:e=>handleInputChange('b_negative',e.target.value),step:\"0.1\",min:\"0\",max:\"100\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"ab_positive\",children:\"AB+:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"ab_positive\",value:regionalData.ab_positive,onChange:e=>handleInputChange('ab_positive',e.target.value),step:\"0.1\",min:\"0\",max:\"100\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"ab_negative\",children:\"AB-:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"ab_negative\",value:regionalData.ab_negative,onChange:e=>handleInputChange('ab_negative',e.target.value),step:\"0.1\",min:\"0\",max:\"100\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"o_positive\",children:\"O+:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"o_positive\",value:regionalData.o_positive,onChange:e=>handleInputChange('o_positive',e.target.value),step:\"0.1\",min:\"0\",max:\"100\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"o_negative\",children:\"O-:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"o_negative\",value:regionalData.o_negative,onChange:e=>handleInputChange('o_negative',e.target.value),step:\"0.1\",min:\"0\",max:\"100\"})]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"admin-button\",children:\"Update Regional Data\"})]})]})]});};export default AdminPanel;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","jsx","_jsx","jsxs","_jsxs","AdminPanel","_user$email","navigate","user","users","setUsers","regionalData","setRegionalData","selectedRegion","setSelectedRegion","loading","setLoading","error","setError","successMessage","setSuccessMessage","isAdmin","email","endsWith","fetchData","mockUsers","id","blood_type","donation_count","last_donation_date","region","a_positive","a_negative","b_positive","b_negative","ab_positive","ab_negative","o_positive","o_negative","err","console","handleUpdateRegionalData","e","preventDefault","setTimeout","handleInputChange","field","value","parseFloat","children","className","length","map","Date","toLocaleDateString","htmlFor","onChange","target","onSubmit","type","step","min","max"],"sources":["C:/Users/yatir/finalProjectReact/frontend/src/components/Admin/AdminPanel.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\ninterface User {\r\n  id: string;\r\n  email: string;\r\n  blood_type: string | null;\r\n  donation_count: number;\r\n  last_donation_date: string | null;\r\n}\r\n\r\ninterface RegionalDataUpdate {\r\n  region: string;\r\n  a_positive: number;\r\n  a_negative: number;\r\n  b_positive: number;\r\n  b_negative: number;\r\n  ab_positive: number;\r\n  ab_negative: number;\r\n  o_positive: number;\r\n  o_negative: number;\r\n}\r\n\r\nconst AdminPanel: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [regionalData, setRegionalData] = useState<RegionalDataUpdate | null>(null);\r\n  const [selectedRegion, setSelectedRegion] = useState<string>('');\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\r\n  \r\n  // Check if user is an admin based on email domain\r\n  const isAdmin = user?.email?.endsWith('@admin.blooddonationawareness.org') || false;\r\n\r\n  useEffect(() => {\r\n    // Redirect if not logged in or not an admin\r\n    if (!loading && (!user || !isAdmin)) {\r\n      navigate('/login');\r\n    }\r\n  }, [user, loading, navigate, isAdmin]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // In a real implementation, these would be actual API calls to Supabase\r\n        // For demo purposes, we're using mock data\r\n        \r\n        // Mock users data\r\n        const mockUsers: User[] = [\r\n          { \r\n            id: '1', \r\n            email: 'user1@example.com', \r\n            blood_type: 'A+', \r\n            donation_count: 3, \r\n            last_donation_date: '2023-01-15' \r\n          },\r\n          { \r\n            id: '2', \r\n            email: 'user2@example.com', \r\n            blood_type: 'O-', \r\n            donation_count: 5, \r\n            last_donation_date: '2023-02-22' \r\n          },\r\n          { \r\n            id: '3', \r\n            email: 'user3@example.com', \r\n            blood_type: 'B+', \r\n            donation_count: 0, \r\n            last_donation_date: null \r\n          },\r\n          { \r\n            id: '4', \r\n            email: 'user4@example.com', \r\n            blood_type: 'AB+', \r\n            donation_count: 2, \r\n            last_donation_date: '2023-03-10' \r\n          },\r\n          { \r\n            id: '5', \r\n            email: 'user5@example.com', \r\n            blood_type: null, \r\n            donation_count: 0, \r\n            last_donation_date: null \r\n          },\r\n        ];\r\n        \r\n        setUsers(mockUsers);\r\n        \r\n        // Mock regional data for Israel\r\n        setRegionalData({\r\n          region: 'Israel',\r\n          a_positive: 34.0,\r\n          a_negative: 4.0,\r\n          b_positive: 17.0,\r\n          b_negative: 2.0,\r\n          ab_positive: 7.0,\r\n          ab_negative: 1.0,\r\n          o_positive: 32.0,\r\n          o_negative: 3.0\r\n        });\r\n        \r\n        setSelectedRegion('Israel');\r\n        \r\n      } catch (err) {\r\n        setError('Failed to fetch data');\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    if (user && isAdmin) {\r\n      fetchData();\r\n    }\r\n  }, [user, isAdmin]);\r\n  \r\n  const handleUpdateRegionalData = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    // In a real implementation, this would update the data in Supabase\r\n    setSuccessMessage('Regional data updated successfully!');\r\n    \r\n    // Clear success message after 3 seconds\r\n    setTimeout(() => {\r\n      setSuccessMessage(null);\r\n    }, 3000);\r\n  };\r\n  \r\n  const handleInputChange = (field: keyof RegionalDataUpdate, value: string) => {\r\n    if (regionalData) {\r\n      setRegionalData({\r\n        ...regionalData,\r\n        [field]: parseFloat(value) || 0\r\n      });\r\n    }\r\n  };\r\n  \r\n  if (loading) {\r\n    return <div>Loading admin panel...</div>;\r\n  }\r\n  \r\n  if (!user || !isAdmin) {\r\n    return <div>Access denied. This page is only available to administrators.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin-panel\">\r\n      <h2>Admin Panel</h2>\r\n      \r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      {successMessage && <div className=\"success-message\">{successMessage}</div>}\r\n      \r\n      <section className=\"admin-section\">\r\n        <h3>User Management</h3>\r\n        <p>Total users: {users.length}</p>\r\n        \r\n        <table className=\"admin-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Email</th>\r\n              <th>Blood Type</th>\r\n              <th>Donations</th>\r\n              <th>Last Donation</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map(user => (\r\n              <tr key={user.id}>\r\n                <td>{user.id}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.blood_type || 'Not set'}</td>\r\n                <td>{user.donation_count}</td>\r\n                <td>{user.last_donation_date ? new Date(user.last_donation_date).toLocaleDateString() : 'Never'}</td>\r\n                <td>\r\n                  <button className=\"admin-button\">Edit</button>\r\n                  <button className=\"admin-button delete\">Delete</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n      \r\n      <section className=\"admin-section\">\r\n        <h3>Regional Data Management</h3>\r\n        \r\n        <div className=\"region-selector\">\r\n          <label htmlFor=\"region-select\">Select Region:</label>\r\n          <select \r\n            id=\"region-select\" \r\n            value={selectedRegion}\r\n            onChange={(e) => setSelectedRegion(e.target.value)}\r\n          >\r\n            <option value=\"Israel\">Israel</option>\r\n            <option value=\"United States\">United States</option>\r\n            <option value=\"United Kingdom\">United Kingdom</option>\r\n            <option value=\"India\">India</option>\r\n          </select>\r\n        </div>\r\n        \r\n        {regionalData && (\r\n          <form onSubmit={handleUpdateRegionalData} className=\"regional-data-form\">\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"a_positive\">A+:</label>\r\n                <input \r\n                  type=\"number\" \r\n                  id=\"a_positive\" \r\n                  value={regionalData.a_positive}\r\n                  onChange={(e) => handleInputChange('a_positive', e.target.value)}\r\n                  step=\"0.1\"\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"a_negative\">A-:</label>\r\n                <input \r\n                  type=\"number\" \r\n                  id=\"a_negative\" \r\n                  value={regionalData.a_negative}\r\n                  onChange={(e) => handleInputChange('a_negative', e.target.value)}\r\n                  step=\"0.1\"\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"b_positive\">B+:</label>\r\n                <input \r\n                  type=\"number\" \r\n                  id=\"b_positive\" \r\n                  value={regionalData.b_positive}\r\n                  onChange={(e) => handleInputChange('b_positive', e.target.value)}\r\n                  step=\"0.1\"\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"b_negative\">B-:</label>\r\n                <input \r\n                  type=\"number\" \r\n                  id=\"b_negative\" \r\n                  value={regionalData.b_negative}\r\n                  onChange={(e) => handleInputChange('b_negative', e.target.value)}\r\n                  step=\"0.1\"\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"ab_positive\">AB+:</label>\r\n                <input \r\n                  type=\"number\" \r\n                  id=\"ab_positive\" \r\n                  value={regionalData.ab_positive}\r\n                  onChange={(e) => handleInputChange('ab_positive', e.target.value)}\r\n                  step=\"0.1\"\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"ab_negative\">AB-:</label>\r\n                <input \r\n                  type=\"number\" \r\n                  id=\"ab_negative\" \r\n                  value={regionalData.ab_negative}\r\n                  onChange={(e) => handleInputChange('ab_negative', e.target.value)}\r\n                  step=\"0.1\"\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"o_positive\">O+:</label>\r\n                <input \r\n                  type=\"number\" \r\n                  id=\"o_positive\" \r\n                  value={regionalData.o_positive}\r\n                  onChange={(e) => handleInputChange('o_positive', e.target.value)}\r\n                  step=\"0.1\"\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"o_negative\">O-:</label>\r\n                <input \r\n                  type=\"number\" \r\n                  id=\"o_negative\" \r\n                  value={regionalData.o_negative}\r\n                  onChange={(e) => handleInputChange('o_negative', e.target.value)}\r\n                  step=\"0.1\"\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <button type=\"submit\" className=\"admin-button\">Update Regional Data</button>\r\n          </form>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}