{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AchievementsSection=_ref=>{let{achievements,showViewAll,compact}=_ref;if(!achievements||achievements.length===0){return/*#__PURE__*/_jsxs(\"div\",{className:\"no-achievements\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"You haven't earned any achievements yet.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Donate blood to unlock achievements and track your contribution!\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"achievements-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:`achievements-grid ${compact?'compact':''}`,children:achievements.map(userAchievement=>{const achievement=userAchievement.achievement;if(!achievement)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"achievement-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"achievement-icon\",children:achievement.icon_url?/*#__PURE__*/_jsx(\"img\",{src:achievement.icon_url,alt:achievement.name,className:\"achievement-image\"}):/*#__PURE__*/_jsx(\"div\",{className:\"default-achievement-icon\",children:\"\\uD83C\\uDFC6\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"achievement-info\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"achievement-name\",children:achievement.name}),!compact&&/*#__PURE__*/_jsx(\"p\",{className:\"achievement-description\",children:achievement.description}),/*#__PURE__*/_jsxs(\"p\",{className:\"achievement-date\",children:[\"Earned on \",new Date(userAchievement.earned_at).toLocaleDateString()]})]})]},userAchievement.id);})}),showViewAll&&achievements.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"view-all-container\",children:/*#__PURE__*/_jsx(\"button\",{className:\"view-all-btn\",onClick:showViewAll,children:\"View All Achievements\"})})]});};export default AchievementsSection;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","AchievementsSection","_ref","achievements","showViewAll","compact","length","className","children","map","userAchievement","achievement","icon_url","src","alt","name","description","Date","earned_at","toLocaleDateString","id","onClick"],"sources":["C:/Users/yatir/finalProjectReact/frontend/src/components/Dashboard/AchievementsSection.tsx"],"sourcesContent":["import React from 'react';\r\nimport { UserAchievement } from '../../services/dashboardService';\r\n\r\ninterface AchievementsSectionProps {\r\n  achievements: UserAchievement[];\r\n  showViewAll: (() => void) | null;\r\n  compact: boolean;\r\n}\r\n\r\nconst AchievementsSection: React.FC<AchievementsSectionProps> = ({ \r\n  achievements, \r\n  showViewAll, \r\n  compact \r\n}) => {\r\n  if (!achievements || achievements.length === 0) {\r\n    return (\r\n      <div className=\"no-achievements\">\r\n        <p>You haven't earned any achievements yet.</p>\r\n        <p>Donate blood to unlock achievements and track your contribution!</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"achievements-section\">\r\n      <div className={`achievements-grid ${compact ? 'compact' : ''}`}>\r\n        {achievements.map((userAchievement) => {\r\n          const achievement = userAchievement.achievement;\r\n          if (!achievement) return null;\r\n          \r\n          return (\r\n            <div key={userAchievement.id} className=\"achievement-card\">\r\n              <div className=\"achievement-icon\">\r\n                {achievement.icon_url ? (\r\n                  <img \r\n                    src={achievement.icon_url} \r\n                    alt={achievement.name} \r\n                    className=\"achievement-image\"\r\n                  />\r\n                ) : (\r\n                  <div className=\"default-achievement-icon\">üèÜ</div>\r\n                )}\r\n              </div>\r\n              <div className=\"achievement-info\">\r\n                <h3 className=\"achievement-name\">{achievement.name}</h3>\r\n                {!compact && (\r\n                  <p className=\"achievement-description\">{achievement.description}</p>\r\n                )}\r\n                <p className=\"achievement-date\">\r\n                  Earned on {new Date(userAchievement.earned_at).toLocaleDateString()}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      \r\n      {showViewAll && achievements.length > 0 && (\r\n        <div className=\"view-all-container\">\r\n          <button className=\"view-all-btn\" onClick={showViewAll}>\r\n            View All Achievements\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AchievementsSection; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAS1B,KAAM,CAAAC,mBAAuD,CAAGC,IAAA,EAI1D,IAJ2D,CAC/DC,YAAY,CACZC,WAAW,CACXC,OACF,CAAC,CAAAH,IAAA,CACC,GAAI,CAACC,YAAY,EAAIA,YAAY,CAACG,MAAM,GAAK,CAAC,CAAE,CAC9C,mBACEN,KAAA,QAAKO,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BV,IAAA,MAAAU,QAAA,CAAG,0CAAwC,CAAG,CAAC,cAC/CV,IAAA,MAAAU,QAAA,CAAG,kEAAgE,CAAG,CAAC,EACpE,CAAC,CAEV,CAEA,mBACER,KAAA,QAAKO,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACnCV,IAAA,QAAKS,SAAS,CAAE,qBAAqBF,OAAO,CAAG,SAAS,CAAG,EAAE,EAAG,CAAAG,QAAA,CAC7DL,YAAY,CAACM,GAAG,CAAEC,eAAe,EAAK,CACrC,KAAM,CAAAC,WAAW,CAAGD,eAAe,CAACC,WAAW,CAC/C,GAAI,CAACA,WAAW,CAAE,MAAO,KAAI,CAE7B,mBACEX,KAAA,QAA8BO,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eACxDV,IAAA,QAAKS,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAC9BG,WAAW,CAACC,QAAQ,cACnBd,IAAA,QACEe,GAAG,CAAEF,WAAW,CAACC,QAAS,CAC1BE,GAAG,CAAEH,WAAW,CAACI,IAAK,CACtBR,SAAS,CAAC,mBAAmB,CAC9B,CAAC,cAEFT,IAAA,QAAKS,SAAS,CAAC,0BAA0B,CAAAC,QAAA,CAAC,cAAE,CAAK,CAClD,CACE,CAAC,cACNR,KAAA,QAAKO,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BV,IAAA,OAAIS,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAAEG,WAAW,CAACI,IAAI,CAAK,CAAC,CACvD,CAACV,OAAO,eACPP,IAAA,MAAGS,SAAS,CAAC,yBAAyB,CAAAC,QAAA,CAAEG,WAAW,CAACK,WAAW,CAAI,CACpE,cACDhB,KAAA,MAAGO,SAAS,CAAC,kBAAkB,CAAAC,QAAA,EAAC,YACpB,CAAC,GAAI,CAAAS,IAAI,CAACP,eAAe,CAACQ,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC,EAClE,CAAC,EACD,CAAC,GApBET,eAAe,CAACU,EAqBrB,CAAC,CAEV,CAAC,CAAC,CACC,CAAC,CAELhB,WAAW,EAAID,YAAY,CAACG,MAAM,CAAG,CAAC,eACrCR,IAAA,QAAKS,SAAS,CAAC,oBAAoB,CAAAC,QAAA,cACjCV,IAAA,WAAQS,SAAS,CAAC,cAAc,CAACc,OAAO,CAAEjB,WAAY,CAAAI,QAAA,CAAC,uBAEvD,CAAQ,CAAC,CACN,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAP,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}