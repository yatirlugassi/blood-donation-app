{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yatir\\\\finalProjectReact\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\Leaderboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { supabase } from '../../services/supabaseClient';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Leaderboard = ({\n  userRegion\n}) => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [leaderboardData, setLeaderboardData] = useState([]);\n  const [userRank, setUserRank] = useState(null);\n  const [filterType, setFilterType] = useState('global');\n  const [timeRange, setTimeRange] = useState('all-time');\n  useEffect(() => {\n    fetchLeaderboardData();\n  }, [filterType, timeRange, userRegion]);\n  const fetchLeaderboardData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Build the query based on filter type and time range\n      let query = supabase.from('user_profiles').select(`\n          id,\n          donation_count,\n          region,\n          blood_type\n        `).order('donation_count', {\n        ascending: false\n      }).limit(10);\n\n      // Apply regional filter if selected\n      if (filterType === 'regional' && userRegion) {\n        query = query.eq('region', userRegion);\n      }\n\n      // Apply time range filter (in a real implementation, this would filter donations by date)\n      // For this example, we'll just use the donation_count\n\n      const {\n        data,\n        error\n      } = await query;\n      if (error) throw error;\n      if (data) {\n        // Transform the data for display\n        const leaderboard = await Promise.all(data.map(async (entry, index) => {\n          // In a real implementation, you would fetch the username from auth.users\n          // For this example, we'll generate a placeholder username\n          const username = `Donor${entry.id.substring(0, 4)}`;\n          return {\n            user_id: entry.id,\n            username,\n            donation_count: entry.donation_count || 0,\n            region: entry.region,\n            blood_type: entry.blood_type,\n            rank: index + 1\n          };\n        }));\n        setLeaderboardData(leaderboard);\n\n        // Find user's rank if they're in the leaderboard\n        const userEntry = leaderboard.find(entry => entry.user_id === (user === null || user === void 0 ? void 0 : user.id));\n        if (userEntry) {\n          setUserRank(userEntry.rank);\n        } else {\n          // If user is not in top 10, fetch their rank separately\n          await fetchUserRank();\n        }\n      }\n    } catch (err) {\n      console.error('Error fetching leaderboard data:', err);\n      setError('Failed to load leaderboard data');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchUserRank = async () => {\n    if (!user) return;\n    try {\n      // Get user's donation count\n      const {\n        data: userData,\n        error: userError\n      } = await supabase.from('user_profiles').select('donation_count').eq('id', user.id).single();\n      if (userError) throw userError;\n      if (userData) {\n        // Count how many users have more donations\n        const {\n          count,\n          error: countError\n        } = await supabase.from('user_profiles').select('id', {\n          count: 'exact'\n        }).gt('donation_count', userData.donation_count || 0);\n        if (countError) throw countError;\n\n        // User's rank is count + 1\n        setUserRank((count || 0) + 1);\n      }\n    } catch (err) {\n      console.error('Error fetching user rank:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leaderboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Donor Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leaderboard-filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"View:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `filter-btn ${filterType === 'global' ? 'active' : ''}`,\n              onClick: () => setFilterType('global'),\n              children: \"Global\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `filter-btn ${filterType === 'regional' ? 'active' : ''}`,\n              onClick: () => setFilterType('regional'),\n              disabled: !userRegion,\n              children: \"My Region\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `filter-btn ${timeRange === 'all-time' ? 'active' : ''}`,\n              onClick: () => setTimeRange('all-time'),\n              children: \"All Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `filter-btn ${timeRange === 'this-year' ? 'active' : ''}`,\n              onClick: () => setTimeRange('this-year'),\n              children: \"This Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `filter-btn ${timeRange === 'this-month' ? 'active' : ''}`,\n              onClick: () => setTimeRange('this-month'),\n              children: \"This Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading leaderboard...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchLeaderboardData,\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leaderboard-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"leaderboard-table-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rank-col\",\n            children: \"Rank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"donor-col\",\n            children: \"Donor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"region-col\",\n            children: \"Region\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"blood-type-col\",\n            children: \"Blood Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"donations-col\",\n            children: \"Donations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"leaderboard-table-body\",\n          children: leaderboardData.length > 0 ? leaderboardData.map(entry => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `leaderboard-row ${entry.user_id === (user === null || user === void 0 ? void 0 : user.id) ? 'current-user' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rank-col\",\n              children: entry.rank <= 3 ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `rank-badge rank-${entry.rank}`,\n                children: entry.rank\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 25\n              }, this) : entry.rank\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"donor-col\",\n              children: entry.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"region-col\",\n              children: entry.region || 'Unknown'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"blood-type-col\",\n              children: entry.blood_type || 'Unknown'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"donations-col\",\n              children: entry.donation_count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 21\n            }, this)]\n          }, entry.user_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-data-message\",\n            children: \"No donors found for the selected filters.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), userRank && userRank > 10 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-rank-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your current rank: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-rank\",\n            children: userRank\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Keep donating to climb the leaderboard!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(Leaderboard, \"wjzoJKSGLRkv/J4g8WgO8ok3tzc=\", false, function () {\n  return [useAuth];\n});\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","supabase","jsxDEV","_jsxDEV","Fragment","_Fragment","Leaderboard","userRegion","_s","user","loading","setLoading","error","setError","leaderboardData","setLeaderboardData","userRank","setUserRank","filterType","setFilterType","timeRange","setTimeRange","fetchLeaderboardData","query","from","select","order","ascending","limit","eq","data","leaderboard","Promise","all","map","entry","index","username","id","substring","user_id","donation_count","region","blood_type","rank","userEntry","find","fetchUserRank","err","console","userData","userError","single","count","countError","gt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","length","_c","$RefreshReg$"],"sources":["C:/Users/yatir/finalProjectReact/frontend/src/components/Dashboard/Leaderboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { supabase } from '../../services/supabaseClient';\r\n\r\ninterface LeaderboardEntry {\r\n  user_id: string;\r\n  username: string;\r\n  donation_count: number;\r\n  region: string | null;\r\n  blood_type: string | null;\r\n  rank: number;\r\n}\r\n\r\ninterface LeaderboardProps {\r\n  userRegion: string | null;\r\n}\r\n\r\nconst Leaderboard: React.FC<LeaderboardProps> = ({ userRegion }) => {\r\n  const { user } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [leaderboardData, setLeaderboardData] = useState<LeaderboardEntry[]>([]);\r\n  const [userRank, setUserRank] = useState<number | null>(null);\r\n  const [filterType, setFilterType] = useState<'global' | 'regional'>('global');\r\n  const [timeRange, setTimeRange] = useState<'all-time' | 'this-year' | 'this-month'>('all-time');\r\n\r\n  useEffect(() => {\r\n    fetchLeaderboardData();\r\n  }, [filterType, timeRange, userRegion]);\r\n\r\n  const fetchLeaderboardData = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Build the query based on filter type and time range\r\n      let query = supabase\r\n        .from('user_profiles')\r\n        .select(`\r\n          id,\r\n          donation_count,\r\n          region,\r\n          blood_type\r\n        `)\r\n        .order('donation_count', { ascending: false })\r\n        .limit(10);\r\n      \r\n      // Apply regional filter if selected\r\n      if (filterType === 'regional' && userRegion) {\r\n        query = query.eq('region', userRegion);\r\n      }\r\n      \r\n      // Apply time range filter (in a real implementation, this would filter donations by date)\r\n      // For this example, we'll just use the donation_count\r\n      \r\n      const { data, error } = await query;\r\n      \r\n      if (error) throw error;\r\n      \r\n      if (data) {\r\n        // Transform the data for display\r\n        const leaderboard: LeaderboardEntry[] = await Promise.all(\r\n          data.map(async (entry, index) => {\r\n            // In a real implementation, you would fetch the username from auth.users\r\n            // For this example, we'll generate a placeholder username\r\n            const username = `Donor${entry.id.substring(0, 4)}`;\r\n            \r\n            return {\r\n              user_id: entry.id,\r\n              username,\r\n              donation_count: entry.donation_count || 0,\r\n              region: entry.region,\r\n              blood_type: entry.blood_type,\r\n              rank: index + 1\r\n            };\r\n          })\r\n        );\r\n        \r\n        setLeaderboardData(leaderboard);\r\n        \r\n        // Find user's rank if they're in the leaderboard\r\n        const userEntry = leaderboard.find(entry => entry.user_id === user?.id);\r\n        if (userEntry) {\r\n          setUserRank(userEntry.rank);\r\n        } else {\r\n          // If user is not in top 10, fetch their rank separately\r\n          await fetchUserRank();\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching leaderboard data:', err);\r\n      setError('Failed to load leaderboard data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchUserRank = async () => {\r\n    if (!user) return;\r\n    \r\n    try {\r\n      // Get user's donation count\r\n      const { data: userData, error: userError } = await supabase\r\n        .from('user_profiles')\r\n        .select('donation_count')\r\n        .eq('id', user.id)\r\n        .single();\r\n      \r\n      if (userError) throw userError;\r\n      \r\n      if (userData) {\r\n        // Count how many users have more donations\r\n        const { count, error: countError } = await supabase\r\n          .from('user_profiles')\r\n          .select('id', { count: 'exact' })\r\n          .gt('donation_count', userData.donation_count || 0);\r\n        \r\n        if (countError) throw countError;\r\n        \r\n        // User's rank is count + 1\r\n        setUserRank((count || 0) + 1);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching user rank:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"leaderboard-container\">\r\n      <div className=\"leaderboard-header\">\r\n        <h3>Donor Leaderboard</h3>\r\n        \r\n        <div className=\"leaderboard-filters\">\r\n          <div className=\"filter-group\">\r\n            <label>View:</label>\r\n            <div className=\"filter-buttons\">\r\n              <button \r\n                className={`filter-btn ${filterType === 'global' ? 'active' : ''}`}\r\n                onClick={() => setFilterType('global')}\r\n              >\r\n                Global\r\n              </button>\r\n              <button \r\n                className={`filter-btn ${filterType === 'regional' ? 'active' : ''}`}\r\n                onClick={() => setFilterType('regional')}\r\n                disabled={!userRegion}\r\n              >\r\n                My Region\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"filter-group\">\r\n            <label>Time:</label>\r\n            <div className=\"filter-buttons\">\r\n              <button \r\n                className={`filter-btn ${timeRange === 'all-time' ? 'active' : ''}`}\r\n                onClick={() => setTimeRange('all-time')}\r\n              >\r\n                All Time\r\n              </button>\r\n              <button \r\n                className={`filter-btn ${timeRange === 'this-year' ? 'active' : ''}`}\r\n                onClick={() => setTimeRange('this-year')}\r\n              >\r\n                This Year\r\n              </button>\r\n              <button \r\n                className={`filter-btn ${timeRange === 'this-month' ? 'active' : ''}`}\r\n                onClick={() => setTimeRange('this-month')}\r\n              >\r\n                This Month\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {loading ? (\r\n        <div className=\"leaderboard-loading\">\r\n          <div className=\"spinner\"></div>\r\n          <p>Loading leaderboard...</p>\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"leaderboard-error\">\r\n          <p>{error}</p>\r\n          <button onClick={fetchLeaderboardData}>Try Again</button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"leaderboard-table\">\r\n            <div className=\"leaderboard-table-header\">\r\n              <div className=\"rank-col\">Rank</div>\r\n              <div className=\"donor-col\">Donor</div>\r\n              <div className=\"region-col\">Region</div>\r\n              <div className=\"blood-type-col\">Blood Type</div>\r\n              <div className=\"donations-col\">Donations</div>\r\n            </div>\r\n            \r\n            <div className=\"leaderboard-table-body\">\r\n              {leaderboardData.length > 0 ? (\r\n                leaderboardData.map(entry => (\r\n                  <div \r\n                    key={entry.user_id} \r\n                    className={`leaderboard-row ${entry.user_id === user?.id ? 'current-user' : ''}`}\r\n                  >\r\n                    <div className=\"rank-col\">\r\n                      {entry.rank <= 3 ? (\r\n                        <span className={`rank-badge rank-${entry.rank}`}>\r\n                          {entry.rank}\r\n                        </span>\r\n                      ) : (\r\n                        entry.rank\r\n                      )}\r\n                    </div>\r\n                    <div className=\"donor-col\">{entry.username}</div>\r\n                    <div className=\"region-col\">{entry.region || 'Unknown'}</div>\r\n                    <div className=\"blood-type-col\">{entry.blood_type || 'Unknown'}</div>\r\n                    <div className=\"donations-col\">{entry.donation_count}</div>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <div className=\"no-data-message\">\r\n                  No donors found for the selected filters.\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          {userRank && userRank > 10 && (\r\n            <div className=\"user-rank-info\">\r\n              <p>Your current rank: <span className=\"user-rank\">{userRank}</span></p>\r\n              <p>Keep donating to climb the leaderboard!</p>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Leaderboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}