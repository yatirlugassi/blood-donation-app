{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yatir\\\\finalProjectReact\\\\frontend\\\\src\\\\pages\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { getBloodTypes, getCompatibleDonors, getCompatibleRecipients } from '../services/supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    user,\n    profile,\n    loading,\n    updateProfile\n  } = useAuth();\n  const [bloodTypes, setBloodTypes] = useState([]);\n  const [selectedBloodType, setSelectedBloodType] = useState(null);\n  const [selectedRegion, setSelectedRegion] = useState(null);\n  const [lastDonationDate, setLastDonationDate] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [compatibleDonors, setCompatibleDonors] = useState([]);\n  const [compatibleRecipients, setCompatibleRecipients] = useState([]);\n  const navigate = useNavigate();\n\n  // Redirect if not logged in\n  useEffect(() => {\n    if (!loading && !user) {\n      navigate('/login');\n    }\n  }, [user, loading, navigate]);\n\n  // Fetch blood types\n  useEffect(() => {\n    const fetchBloodTypes = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await getBloodTypes();\n        if (error) throw error;\n        if (data) setBloodTypes(data);\n      } catch (err) {\n        console.error('Error fetching blood types:', err.message);\n        setError('Failed to load blood types');\n      }\n    };\n    fetchBloodTypes();\n  }, []);\n\n  // Set initial form values from profile\n  useEffect(() => {\n    if (profile) {\n      setSelectedBloodType(profile.blood_type);\n      setSelectedRegion(profile.region);\n      setLastDonationDate(profile.last_donation_date);\n    }\n  }, [profile]);\n\n  // Fetch compatibility data when blood type is selected\n  useEffect(() => {\n    const fetchCompatibility = async () => {\n      if (!selectedBloodType) {\n        setCompatibleDonors([]);\n        setCompatibleRecipients([]);\n        return;\n      }\n      try {\n        const [donorsResponse, recipientsResponse] = await Promise.all([getCompatibleDonors(selectedBloodType), getCompatibleRecipients(selectedBloodType)]);\n        if (donorsResponse.error) throw donorsResponse.error;\n        if (recipientsResponse.error) throw recipientsResponse.error;\n        setCompatibleDonors(donorsResponse.data || []);\n        setCompatibleRecipients(recipientsResponse.data || []);\n      } catch (err) {\n        console.error('Error fetching compatibility data:', err.message);\n        setError('Failed to load compatibility data');\n      }\n    };\n    fetchCompatibility();\n  }, [selectedBloodType]);\n  const handleSaveProfile = async () => {\n    if (!user) return;\n    try {\n      setIsSaving(true);\n      setError(null);\n      const {\n        error\n      } = await updateProfile({\n        blood_type: selectedBloodType,\n        region: selectedRegion,\n        last_donation_date: lastDonationDate\n      });\n      if (error) throw error;\n      setIsEditing(false);\n    } catch (err) {\n      console.error('Error updating profile:', err.message);\n      setError('Failed to update profile');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 12\n    }, this);\n  }\n  if (!user || !profile) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please log in to view your dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 12\n    }, this);\n  }\n  const regions = ['North', 'South', 'Central', 'East', 'West'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), !isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-button\",\n          onClick: () => setIsEditing(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-button\",\n            onClick: handleSaveProfile,\n            disabled: isSaving,\n            children: isSaving ? 'Saving...' : 'Save'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-button\",\n            onClick: () => {\n              setIsEditing(false);\n              setSelectedBloodType(profile.blood_type);\n              setSelectedRegion(profile.region);\n              setLastDonationDate(profile.last_donation_date);\n            },\n            disabled: isSaving,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-label\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-value\",\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-label\",\n            children: \"Blood Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-value\",\n            children: isEditing ? /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedBloodType || '',\n              onChange: e => setSelectedBloodType(e.target.value || null),\n              disabled: isSaving,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Blood Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this), bloodTypes.map(bloodType => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: bloodType.type,\n                children: bloodType.type\n              }, bloodType.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this) : profile.blood_type || 'Not set'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-label\",\n            children: \"Region:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-value\",\n            children: isEditing ? /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedRegion || '',\n              onChange: e => setSelectedRegion(e.target.value || null),\n              disabled: isSaving,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Region\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), regions.map(region => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: region,\n                children: region\n              }, region, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this) : profile.region || 'Not set'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-label\",\n            children: \"Last Donation:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-value\",\n            children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: lastDonationDate || '',\n              onChange: e => setLastDonationDate(e.target.value || null),\n              disabled: isSaving\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this) : profile.last_donation_date ? new Date(profile.last_donation_date).toLocaleDateString() : 'Not recorded'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-label\",\n            children: \"Donation Count:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-value\",\n            children: profile.donation_count || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), selectedBloodType && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Blood Type Compatibility\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"compatibility-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"compatibility-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"You can receive from:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), compatibleDonors.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"compatibility-list\",\n            children: compatibleDonors.map(type => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"blood-type-badge\",\n              children: type\n            }, type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No compatible donors found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"compatibility-divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"compatibility-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"You can donate to:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), compatibleRecipients.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"compatibility-list\",\n            children: compatibleRecipients.map(type => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"blood-type-badge\",\n              children: type\n            }, type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No compatible recipients found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Donation Journey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"donation-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: profile.donation_count || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Total Donations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: profile.donation_count ? (profile.donation_count * 3).toFixed(0) : 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Lives Impacted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: profile.last_donation_date ? Math.max(0, Math.floor((56 - Math.min(56, Math.floor((Date.now() - new Date(profile.last_donation_date).getTime()) / (1000 * 60 * 60 * 24)))) / 7)) : 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Weeks Until Next Eligible\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"donation-cta\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ready to make a difference?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Donating blood takes just an hour of your time but can save up to 3 lives.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary-button\",\n          onClick: () => navigate('/donate'),\n          children: \"Find Donation Centers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"CDHIvl4ZwG+OuhCztEJZ/UQlnCo=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useAuth","getBloodTypes","getCompatibleDonors","getCompatibleRecipients","jsxDEV","_jsxDEV","Dashboard","_s","user","profile","loading","updateProfile","bloodTypes","setBloodTypes","selectedBloodType","setSelectedBloodType","selectedRegion","setSelectedRegion","lastDonationDate","setLastDonationDate","isEditing","setIsEditing","isSaving","setIsSaving","error","setError","compatibleDonors","setCompatibleDonors","compatibleRecipients","setCompatibleRecipients","navigate","fetchBloodTypes","data","err","console","message","blood_type","region","last_donation_date","fetchCompatibility","donorsResponse","recipientsResponse","Promise","all","handleSaveProfile","className","children","fileName","_jsxFileName","lineNumber","columnNumber","regions","onClick","disabled","email","value","onChange","e","target","map","bloodType","type","id","Date","toLocaleDateString","donation_count","length","toFixed","Math","max","floor","min","now","getTime","_c","$RefreshReg$"],"sources":["C:/Users/yatir/finalProjectReact/frontend/src/pages/Dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { BloodType, getBloodTypes, getCompatibleDonors, getCompatibleRecipients } from '../services/supabaseClient';\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const { user, profile, loading, updateProfile } = useAuth();\r\n  const [bloodTypes, setBloodTypes] = useState<BloodType[]>([]);\r\n  const [selectedBloodType, setSelectedBloodType] = useState<string | null>(null);\r\n  const [selectedRegion, setSelectedRegion] = useState<string | null>(null);\r\n  const [lastDonationDate, setLastDonationDate] = useState<string | null>(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [compatibleDonors, setCompatibleDonors] = useState<string[]>([]);\r\n  const [compatibleRecipients, setCompatibleRecipients] = useState<string[]>([]);\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  // Redirect if not logged in\r\n  useEffect(() => {\r\n    if (!loading && !user) {\r\n      navigate('/login');\r\n    }\r\n  }, [user, loading, navigate]);\r\n\r\n  // Fetch blood types\r\n  useEffect(() => {\r\n    const fetchBloodTypes = async () => {\r\n      try {\r\n        const { data, error } = await getBloodTypes();\r\n        if (error) throw error;\r\n        if (data) setBloodTypes(data);\r\n      } catch (err: any) {\r\n        console.error('Error fetching blood types:', err.message);\r\n        setError('Failed to load blood types');\r\n      }\r\n    };\r\n\r\n    fetchBloodTypes();\r\n  }, []);\r\n\r\n  // Set initial form values from profile\r\n  useEffect(() => {\r\n    if (profile) {\r\n      setSelectedBloodType(profile.blood_type);\r\n      setSelectedRegion(profile.region);\r\n      setLastDonationDate(profile.last_donation_date);\r\n    }\r\n  }, [profile]);\r\n\r\n  // Fetch compatibility data when blood type is selected\r\n  useEffect(() => {\r\n    const fetchCompatibility = async () => {\r\n      if (!selectedBloodType) {\r\n        setCompatibleDonors([]);\r\n        setCompatibleRecipients([]);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const [donorsResponse, recipientsResponse] = await Promise.all([\r\n          getCompatibleDonors(selectedBloodType),\r\n          getCompatibleRecipients(selectedBloodType)\r\n        ]);\r\n\r\n        if (donorsResponse.error) throw donorsResponse.error;\r\n        if (recipientsResponse.error) throw recipientsResponse.error;\r\n\r\n        setCompatibleDonors(donorsResponse.data || []);\r\n        setCompatibleRecipients(recipientsResponse.data || []);\r\n      } catch (err: any) {\r\n        console.error('Error fetching compatibility data:', err.message);\r\n        setError('Failed to load compatibility data');\r\n      }\r\n    };\r\n\r\n    fetchCompatibility();\r\n  }, [selectedBloodType]);\r\n\r\n  const handleSaveProfile = async () => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      setIsSaving(true);\r\n      setError(null);\r\n\r\n      const { error } = await updateProfile({\r\n        blood_type: selectedBloodType,\r\n        region: selectedRegion,\r\n        last_donation_date: lastDonationDate\r\n      });\r\n\r\n      if (error) throw error;\r\n      setIsEditing(false);\r\n    } catch (err: any) {\r\n      console.error('Error updating profile:', err.message);\r\n      setError('Failed to update profile');\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading...</div>;\r\n  }\r\n\r\n  if (!user || !profile) {\r\n    return <div>Please log in to view your dashboard</div>;\r\n  }\r\n\r\n  const regions = ['North', 'South', 'Central', 'East', 'West'];\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h1>Your Dashboard</h1>\r\n      \r\n      {error && (\r\n        <div className=\"error-message\">\r\n          {error}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"dashboard-card\">\r\n        <div className=\"card-header\">\r\n          <h2>Your Profile</h2>\r\n          {!isEditing ? (\r\n            <button \r\n              className=\"edit-button\"\r\n              onClick={() => setIsEditing(true)}\r\n            >\r\n              Edit\r\n            </button>\r\n          ) : (\r\n            <div className=\"button-group\">\r\n              <button \r\n                className=\"save-button\"\r\n                onClick={handleSaveProfile}\r\n                disabled={isSaving}\r\n              >\r\n                {isSaving ? 'Saving...' : 'Save'}\r\n              </button>\r\n              <button \r\n                className=\"cancel-button\"\r\n                onClick={() => {\r\n                  setIsEditing(false);\r\n                  setSelectedBloodType(profile.blood_type);\r\n                  setSelectedRegion(profile.region);\r\n                  setLastDonationDate(profile.last_donation_date);\r\n                }}\r\n                disabled={isSaving}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"profile-details\">\r\n          <div className=\"profile-row\">\r\n            <div className=\"profile-label\">Email:</div>\r\n            <div className=\"profile-value\">{user.email}</div>\r\n          </div>\r\n          \r\n          <div className=\"profile-row\">\r\n            <div className=\"profile-label\">Blood Type:</div>\r\n            <div className=\"profile-value\">\r\n              {isEditing ? (\r\n                <select\r\n                  value={selectedBloodType || ''}\r\n                  onChange={(e) => setSelectedBloodType(e.target.value || null)}\r\n                  disabled={isSaving}\r\n                >\r\n                  <option value=\"\">Select Blood Type</option>\r\n                  {bloodTypes.map((bloodType) => (\r\n                    <option key={bloodType.id} value={bloodType.type}>\r\n                      {bloodType.type}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              ) : (\r\n                profile.blood_type || 'Not set'\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"profile-row\">\r\n            <div className=\"profile-label\">Region:</div>\r\n            <div className=\"profile-value\">\r\n              {isEditing ? (\r\n                <select\r\n                  value={selectedRegion || ''}\r\n                  onChange={(e) => setSelectedRegion(e.target.value || null)}\r\n                  disabled={isSaving}\r\n                >\r\n                  <option value=\"\">Select Region</option>\r\n                  {regions.map((region) => (\r\n                    <option key={region} value={region}>\r\n                      {region}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              ) : (\r\n                profile.region || 'Not set'\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"profile-row\">\r\n            <div className=\"profile-label\">Last Donation:</div>\r\n            <div className=\"profile-value\">\r\n              {isEditing ? (\r\n                <input\r\n                  type=\"date\"\r\n                  value={lastDonationDate || ''}\r\n                  onChange={(e) => setLastDonationDate(e.target.value || null)}\r\n                  disabled={isSaving}\r\n                />\r\n              ) : (\r\n                profile.last_donation_date \r\n                  ? new Date(profile.last_donation_date).toLocaleDateString() \r\n                  : 'Not recorded'\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"profile-row\">\r\n            <div className=\"profile-label\">Donation Count:</div>\r\n            <div className=\"profile-value\">{profile.donation_count || 0}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {selectedBloodType && (\r\n        <div className=\"dashboard-card\">\r\n          <h2>Blood Type Compatibility</h2>\r\n          \r\n          <div className=\"compatibility-container\">\r\n            <div className=\"compatibility-section\">\r\n              <h3>You can receive from:</h3>\r\n              {compatibleDonors.length > 0 ? (\r\n                <ul className=\"compatibility-list\">\r\n                  {compatibleDonors.map((type) => (\r\n                    <li key={type} className=\"blood-type-badge\">\r\n                      {type}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              ) : (\r\n                <p>No compatible donors found</p>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"compatibility-divider\"></div>\r\n            \r\n            <div className=\"compatibility-section\">\r\n              <h3>You can donate to:</h3>\r\n              {compatibleRecipients.length > 0 ? (\r\n                <ul className=\"compatibility-list\">\r\n                  {compatibleRecipients.map((type) => (\r\n                    <li key={type} className=\"blood-type-badge\">\r\n                      {type}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              ) : (\r\n                <p>No compatible recipients found</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"dashboard-card\">\r\n        <h2>Your Donation Journey</h2>\r\n        \r\n        <div className=\"donation-stats\">\r\n          <div className=\"stat-box\">\r\n            <div className=\"stat-value\">{profile.donation_count || 0}</div>\r\n            <div className=\"stat-label\">Total Donations</div>\r\n          </div>\r\n          \r\n          <div className=\"stat-box\">\r\n            <div className=\"stat-value\">\r\n              {profile.donation_count ? (profile.donation_count * 3).toFixed(0) : 0}\r\n            </div>\r\n            <div className=\"stat-label\">Lives Impacted</div>\r\n          </div>\r\n          \r\n          <div className=\"stat-box\">\r\n            <div className=\"stat-value\">\r\n              {profile.last_donation_date ? (\r\n                Math.max(\r\n                  0,\r\n                  Math.floor(\r\n                    (56 - Math.min(\r\n                      56, \r\n                      Math.floor((Date.now() - new Date(profile.last_donation_date).getTime()) / (1000 * 60 * 60 * 24))\r\n                    )) / 7\r\n                  )\r\n                )\r\n              ) : (\r\n                'N/A'\r\n              )}\r\n            </div>\r\n            <div className=\"stat-label\">Weeks Until Next Eligible</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"donation-cta\">\r\n          <h3>Ready to make a difference?</h3>\r\n          <p>Donating blood takes just an hour of your time but can save up to 3 lives.</p>\r\n          <button className=\"primary-button\" onClick={() => navigate('/donate')}>\r\n            Find Donation Centers\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}