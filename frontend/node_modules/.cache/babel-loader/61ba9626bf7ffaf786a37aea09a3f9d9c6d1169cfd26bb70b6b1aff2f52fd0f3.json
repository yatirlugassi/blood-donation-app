{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yatir\\\\finalProjectReact\\\\frontend\\\\src\\\\components\\\\Auth\\\\RegisterForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    signUp\n  } = useAuth();\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Reset messages\n    setErrorMessage('');\n    setSuccessMessage('');\n\n    // Validate input\n    if (!email || !password || !confirmPassword) {\n      setErrorMessage('Please fill in all fields');\n      return;\n    }\n    if (password !== confirmPassword) {\n      setErrorMessage('Passwords do not match');\n      return;\n    }\n    if (password.length < 8) {\n      setErrorMessage('Password must be at least 8 characters long');\n      return;\n    }\n    try {\n      setIsLoading(true);\n      const {\n        error\n      } = await signUp(email, password);\n      if (error) {\n        setErrorMessage(error.message || 'Failed to create account');\n        return;\n      }\n      setSuccessMessage('Registration successful! Please check your email to confirm your account.');\n\n      // If using email confirmation, we'll stay on this page.\n      // Otherwise, we can redirect to login page or dashboard\n      // navigate('/login');\n    } catch (err) {\n      setErrorMessage(err.message || 'An unexpected error occurred');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create an Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          disabled: isLoading || !!successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          disabled: isLoading || !!successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Must be at least 8 characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true,\n          disabled: isLoading || !!successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"auth-button\",\n        disabled: isLoading || !!successMessage,\n        children: isLoading ? 'Creating Account...' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-links\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterForm, \"XZSL+Qlu+7ENoDWGoYBhzf7Nc2o=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","Link","useNavigate","useAuth","jsxDEV","_jsxDEV","RegisterForm","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","successMessage","setSuccessMessage","isLoading","setIsLoading","signUp","navigate","handleSubmit","e","preventDefault","length","error","message","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","disabled","to","_c","$RefreshReg$"],"sources":["C:/Users/yatir/finalProjectReact/frontend/src/components/Auth/RegisterForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nconst RegisterForm: React.FC = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  const { signUp } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    // Reset messages\r\n    setErrorMessage('');\r\n    setSuccessMessage('');\r\n    \r\n    // Validate input\r\n    if (!email || !password || !confirmPassword) {\r\n      setErrorMessage('Please fill in all fields');\r\n      return;\r\n    }\r\n    \r\n    if (password !== confirmPassword) {\r\n      setErrorMessage('Passwords do not match');\r\n      return;\r\n    }\r\n    \r\n    if (password.length < 8) {\r\n      setErrorMessage('Password must be at least 8 characters long');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setIsLoading(true);\r\n      \r\n      const { error } = await signUp(email, password);\r\n      \r\n      if (error) {\r\n        setErrorMessage(error.message || 'Failed to create account');\r\n        return;\r\n      }\r\n      \r\n      setSuccessMessage(\r\n        'Registration successful! Please check your email to confirm your account.'\r\n      );\r\n      \r\n      // If using email confirmation, we'll stay on this page.\r\n      // Otherwise, we can redirect to login page or dashboard\r\n      // navigate('/login');\r\n    } catch (err: any) {\r\n      setErrorMessage(err.message || 'An unexpected error occurred');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-form-container\">\r\n      <h2>Create an Account</h2>\r\n      \r\n      {errorMessage && (\r\n        <div className=\"error-message\">\r\n          {errorMessage}\r\n        </div>\r\n      )}\r\n      \r\n      {successMessage && (\r\n        <div className=\"success-message\">\r\n          {successMessage}\r\n        </div>\r\n      )}\r\n      \r\n      <form onSubmit={handleSubmit} className=\"auth-form\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n            disabled={isLoading || !!successMessage}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n            disabled={isLoading || !!successMessage}\r\n          />\r\n          <small>Must be at least 8 characters</small>\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n            disabled={isLoading || !!successMessage}\r\n          />\r\n        </div>\r\n        \r\n        <button \r\n          type=\"submit\" \r\n          className=\"auth-button\"\r\n          disabled={isLoading || !!successMessage}\r\n        >\r\n          {isLoading ? 'Creating Account...' : 'Register'}\r\n        </button>\r\n      </form>\r\n      \r\n      <div className=\"auth-links\">\r\n        <p>\r\n          Already have an account? <Link to=\"/login\">Log in</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}