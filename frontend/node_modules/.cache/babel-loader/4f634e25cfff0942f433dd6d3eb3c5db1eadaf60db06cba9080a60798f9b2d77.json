{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yatir\\\\finalProjectReact\\\\frontend\\\\src\\\\components\\\\Auth\\\\SimpleConnectionTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\n\n// Hardcoded values directly in this component for testing\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = 'https://tbdoaiawpykipqwcgpuc.supabase.co';\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRiZG9haWF3cHlraXBxd2NncHVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIwNDk5OTksImV4cCI6MjA1NzYyNTk5OX0.dNZQCyfLFlX50wOfut7RjTEQjLx0LOG41ytRUgvADPI';\nconst SimpleConnectionTest = () => {\n  _s();\n  const [status, setStatus] = useState('Ready to test');\n  const [loading, setLoading] = useState(false);\n  const testConnection = async () => {\n    setStatus('Testing connection...');\n    setLoading(true);\n    try {\n      // Create a fresh Supabase client for this test only\n      const supabase = createClient(supabaseUrl, supabaseAnonKey);\n\n      // Set a timeout for the test\n      const timeoutPromise = new Promise((_, reject) => {\n        setTimeout(() => {\n          reject(new Error('Connection test timed out after 5 seconds'));\n        }, 5000);\n      });\n\n      // Create a promise for the actual query\n      const queryPromise = supabase.from('blood_types').select('count');\n\n      // Race the query against the timeout\n      const result = await Promise.race([queryPromise, timeoutPromise]);\n      if ('error' in result && result.error) {\n        setStatus(`Connection error: ${result.error.message}`);\n      } else {\n        setStatus(`Connection successful! Response: ${JSON.stringify(result.data)}`);\n      }\n    } catch (err) {\n      setStatus(`Exception: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '500px',\n      margin: '0 auto',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Simple Supabase Connection Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: testConnection,\n        disabled: loading,\n        style: {\n          padding: '10px 20px',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          fontSize: '16px'\n        },\n        children: loading ? 'Testing...' : 'Test Connection'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        padding: '15px',\n        backgroundColor: '#f5f5f5',\n        borderRadius: '5px',\n        minHeight: '100px',\n        fontFamily: 'monospace'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          whiteSpace: 'pre-wrap',\n          wordBreak: 'break-word'\n        },\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Notes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"This test creates a fresh Supabase client each time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"The test has a 5-second timeout to prevent hanging\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No dependencies on other components or contexts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Uses hardcoded credentials directly in this component\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleConnectionTest, \"O21eOB+NYer/bJg23zO7x0BTqWo=\");\n_c = SimpleConnectionTest;\nexport default SimpleConnectionTest;\nvar _c;\n$RefreshReg$(_c, \"SimpleConnectionTest\");","map":{"version":3,"names":["React","useState","createClient","jsxDEV","_jsxDEV","supabaseUrl","supabaseAnonKey","SimpleConnectionTest","_s","status","setStatus","loading","setLoading","testConnection","supabase","timeoutPromise","Promise","_","reject","setTimeout","Error","queryPromise","from","select","result","race","error","message","JSON","stringify","data","err","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","onClick","disabled","backgroundColor","color","border","borderRadius","fontSize","marginTop","minHeight","fontFamily","whiteSpace","wordBreak","_c","$RefreshReg$"],"sources":["C:/Users/yatir/finalProjectReact/frontend/src/components/Auth/SimpleConnectionTest.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\n// Hardcoded values directly in this component for testing\r\nconst supabaseUrl = 'https://tbdoaiawpykipqwcgpuc.supabase.co';\r\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRiZG9haWF3cHlraXBxd2NncHVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIwNDk5OTksImV4cCI6MjA1NzYyNTk5OX0.dNZQCyfLFlX50wOfut7RjTEQjLx0LOG41ytRUgvADPI';\r\n\r\nconst SimpleConnectionTest: React.FC = () => {\r\n  const [status, setStatus] = useState<string>('Ready to test');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const testConnection = async () => {\r\n    setStatus('Testing connection...');\r\n    setLoading(true);\r\n    \r\n    try {\r\n      // Create a fresh Supabase client for this test only\r\n      const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n      \r\n      // Set a timeout for the test\r\n      const timeoutPromise = new Promise<{data: null, error: Error}>((_, reject) => {\r\n        setTimeout(() => {\r\n          reject(new Error('Connection test timed out after 5 seconds'));\r\n        }, 5000);\r\n      });\r\n      \r\n      // Create a promise for the actual query\r\n      const queryPromise = supabase.from('blood_types').select('count');\r\n      \r\n      // Race the query against the timeout\r\n      const result = await Promise.race([\r\n        queryPromise,\r\n        timeoutPromise\r\n      ]);\r\n      \r\n      if ('error' in result && result.error) {\r\n        setStatus(`Connection error: ${result.error.message}`);\r\n      } else {\r\n        setStatus(`Connection successful! Response: ${JSON.stringify(result.data)}`);\r\n      }\r\n    } catch (err: any) {\r\n      setStatus(`Exception: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '500px', margin: '0 auto', padding: '20px' }}>\r\n      <h1>Simple Supabase Connection Test</h1>\r\n      \r\n      <div style={{ marginBottom: '20px' }}>\r\n        <button \r\n          onClick={testConnection} \r\n          disabled={loading}\r\n          style={{ \r\n            padding: '10px 20px', \r\n            backgroundColor: '#4CAF50', \r\n            color: 'white', \r\n            border: 'none', \r\n            borderRadius: '4px',\r\n            fontSize: '16px'\r\n          }}\r\n        >\r\n          {loading ? 'Testing...' : 'Test Connection'}\r\n        </button>\r\n      </div>\r\n      \r\n      <div style={{ \r\n        marginTop: '20px', \r\n        padding: '15px', \r\n        backgroundColor: '#f5f5f5', \r\n        borderRadius: '5px',\r\n        minHeight: '100px',\r\n        fontFamily: 'monospace'\r\n      }}>\r\n        <h3>Status:</h3>\r\n        <pre style={{ whiteSpace: 'pre-wrap', wordBreak: 'break-word' }}>{status}</pre>\r\n      </div>\r\n      \r\n      <div style={{ marginTop: '20px' }}>\r\n        <h3>Notes:</h3>\r\n        <ul>\r\n          <li>This test creates a fresh Supabase client each time</li>\r\n          <li>The test has a 5-second timeout to prevent hanging</li>\r\n          <li>No dependencies on other components or contexts</li>\r\n          <li>Uses hardcoded credentials directly in this component</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleConnectionTest; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}