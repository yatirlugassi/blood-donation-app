{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useAuth}from'../../contexts/AuthContext';import{getUserDonations,getUserDonationGoals,getUserAchievements,getUserReminders,calculateNextDonationDate}from'../../services/dashboardService';import DonationHistory from'./DonationHistory';import UserStats from'./UserStats';import AchievementsSection from'./AchievementsSection';import DonationForm from'./DonationForm';import GoalTracker from'./GoalTracker';import RemindersSection from'./RemindersSection';import{supabase}from'../../services/supabaseClient';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{var _getNextDonationDate;const{user}=useAuth();const[loading,setLoading]=useState(true);const[userProfile,setUserProfile]=useState(null);const[donations,setDonations]=useState([]);const[goals,setGoals]=useState([]);const[achievements,setAchievements]=useState([]);const[reminders,setReminders]=useState([]);const[activeTab,setActiveTab]=useState('overview');useEffect(()=>{if(user){const fetchDashboardData=async()=>{setLoading(true);try{// Fetch user profile\nconst{data:profileData,error:profileError}=await supabase.from('user_profiles').select('*').eq('id',user.id).single();if(profileError){console.error('Error fetching user profile:',profileError);}else{setUserProfile(profileData);}// Fetch donations\nconst{data:donationsData}=await getUserDonations(user.id);if(donationsData){setDonations(donationsData);}// Fetch goals\nconst{data:goalsData}=await getUserDonationGoals(user.id);if(goalsData){setGoals(goalsData);}// Fetch achievements\nconst{data:achievementsData}=await getUserAchievements(user.id);if(achievementsData){setAchievements(achievementsData);}// Fetch reminders\nconst{data:remindersData}=await getUserReminders(user.id);if(remindersData){setReminders(remindersData);}}catch(error){console.error('Error loading dashboard data:',error);}finally{setLoading(false);}};fetchDashboardData();}},[user]);const handleDonationAdded=newDonation=>{setDonations(prev=>[newDonation,...prev]);// Update user profile\nif(userProfile){const updatedProfile={...userProfile,donation_count:userProfile.donation_count+1,last_donation_date:newDonation.donation_date};setUserProfile(updatedProfile);// Update profile in database\nsupabase.from('user_profiles').update({donation_count:updatedProfile.donation_count,last_donation_date:updatedProfile.last_donation_date}).eq('id',user===null||user===void 0?void 0:user.id).then(_ref=>{let{error}=_ref;if(error)console.error('Error updating profile:',error);});}};const handleGoalAdded=newGoal=>{setGoals(prev=>[...prev,newGoal]);};const handleGoalCompleted=goalId=>{setGoals(prev=>prev.map(goal=>goal.id===goalId?{...goal,is_completed:true}:goal));};const getNextDonationDate=()=>{if(!(userProfile!==null&&userProfile!==void 0&&userProfile.last_donation_date))return null;return calculateNextDonationDate(userProfile.last_donation_date);};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-loading\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Loading your dashboard...\"}),/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"dashboard-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Your Dashboard\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:`tab-btn ${activeTab==='overview'?'active':''}`,onClick:()=>setActiveTab('overview'),children:\"Overview\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab-btn ${activeTab==='donations'?'active':''}`,onClick:()=>setActiveTab('donations'),children:\"Donations\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab-btn ${activeTab==='goals'?'active':''}`,onClick:()=>setActiveTab('goals'),children:\"Goals\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab-btn ${activeTab==='achievements'?'active':''}`,onClick:()=>setActiveTab('achievements'),children:\"Achievements\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab-btn ${activeTab==='reminders'?'active':''}`,onClick:()=>setActiveTab('reminders'),children:\"Reminders\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-content\",children:[activeTab==='overview'&&/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-overview\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-card profile-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Your Profile\"}),userProfile?/*#__PURE__*/_jsxs(\"div\",{className:\"profile-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Blood Type:\"}),\" \",userProfile.blood_type||'Not set']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Region:\"}),\" \",userProfile.region||'Not set']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Total Donations:\"}),\" \",userProfile.donation_count||0]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Last Donation:\"}),\" \",userProfile.last_donation_date?new Date(userProfile.last_donation_date).toLocaleDateString():'Never donated']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Next Eligible Donation Date:\"}),\" \",getNextDonationDate()?(_getNextDonationDate=getNextDonationDate())===null||_getNextDonationDate===void 0?void 0:_getNextDonationDate.toLocaleDateString():'You can donate anytime']})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Profile information not available\"})]}),/*#__PURE__*/_jsx(UserStats,{donations:donations,userProfile:userProfile})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-card recent-donations\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Recent Donations\"}),/*#__PURE__*/_jsx(DonationHistory,{donations:donations.slice(0,3),showViewAll:()=>setActiveTab('donations')})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-card recent-achievements\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Recent Achievements\"}),/*#__PURE__*/_jsx(AchievementsSection,{achievements:achievements.slice(0,3),showViewAll:()=>setActiveTab('achievements'),compact:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-card active-goals\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Active Goals\"}),/*#__PURE__*/_jsx(GoalTracker,{goals:goals.filter(g=>!g.is_completed).slice(0,2),showViewAll:()=>setActiveTab('goals'),compact:true,onGoalCompleted:handleGoalCompleted,currentDonationCount:(userProfile===null||userProfile===void 0?void 0:userProfile.donation_count)||0})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-card upcoming-reminders\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Upcoming Reminders\"}),/*#__PURE__*/_jsx(RemindersSection,{reminders:reminders.filter(r=>!r.is_read).slice(0,3),showViewAll:()=>setActiveTab('reminders'),compact:true})]})]})]}),activeTab==='donations'&&/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-donations\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add New Donation\"}),/*#__PURE__*/_jsx(DonationForm,{onDonationAdded:handleDonationAdded,userId:(user===null||user===void 0?void 0:user.id)||''})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-card full-width\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Donation History\"}),/*#__PURE__*/_jsx(DonationHistory,{donations:donations,showViewAll:null})]})})]}),activeTab==='goals'&&/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-goals\",children:/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-card full-width\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Your Donation Goals\"}),/*#__PURE__*/_jsx(GoalTracker,{goals:goals,showViewAll:null,compact:false,onGoalCompleted:handleGoalCompleted,currentDonationCount:(userProfile===null||userProfile===void 0?void 0:userProfile.donation_count)||0,onGoalAdded:handleGoalAdded,userId:(user===null||user===void 0?void 0:user.id)||''})]})})}),activeTab==='achievements'&&/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-achievements\",children:/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-card full-width\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Your Achievements\"}),/*#__PURE__*/_jsx(AchievementsSection,{achievements:achievements,showViewAll:null,compact:false})]})})}),activeTab==='reminders'&&/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-reminders\",children:/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-card full-width\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Your Donation Reminders\"}),/*#__PURE__*/_jsx(RemindersSection,{reminders:reminders,showViewAll:null,compact:false,userId:(user===null||user===void 0?void 0:user.id)||''})]})})})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","useAuth","getUserDonations","getUserDonationGoals","getUserAchievements","getUserReminders","calculateNextDonationDate","DonationHistory","UserStats","AchievementsSection","DonationForm","GoalTracker","RemindersSection","supabase","jsx","_jsx","jsxs","_jsxs","Dashboard","_getNextDonationDate","user","loading","setLoading","userProfile","setUserProfile","donations","setDonations","goals","setGoals","achievements","setAchievements","reminders","setReminders","activeTab","setActiveTab","fetchDashboardData","data","profileData","error","profileError","from","select","eq","id","single","console","donationsData","goalsData","achievementsData","remindersData","handleDonationAdded","newDonation","prev","updatedProfile","donation_count","last_donation_date","donation_date","update","then","_ref","handleGoalAdded","newGoal","handleGoalCompleted","goalId","map","goal","is_completed","getNextDonationDate","className","children","onClick","blood_type","region","Date","toLocaleDateString","slice","showViewAll","compact","filter","g","onGoalCompleted","currentDonationCount","r","is_read","onDonationAdded","userId","onGoalAdded"],"sources":["C:/Users/yatir/finalProjectReact/frontend/src/components/Dashboard/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { \r\n  getUserDonations, \r\n  getUserDonationGoals, \r\n  getUserAchievements,\r\n  getUserReminders,\r\n  DonationGoal,\r\n  Donation, \r\n  UserAchievement,\r\n  DonationReminder,\r\n  calculateNextDonationDate\r\n} from '../../services/dashboardService';\r\nimport DonationHistory from './DonationHistory';\r\nimport UserStats from './UserStats';\r\nimport AchievementsSection from './AchievementsSection';\r\nimport DonationForm from './DonationForm';\r\nimport GoalTracker from './GoalTracker';\r\nimport RemindersSection from './RemindersSection';\r\nimport { supabase } from '../../services/supabaseClient';\r\n\r\ninterface UserProfile {\r\n  id: string;\r\n  blood_type: string;\r\n  region: string;\r\n  donation_count: number;\r\n  last_donation_date: string | null;\r\n  created_at: string;\r\n}\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [userProfile, setUserProfile] = useState<UserProfile | null>(null);\r\n  const [donations, setDonations] = useState<Donation[]>([]);\r\n  const [goals, setGoals] = useState<DonationGoal[]>([]);\r\n  const [achievements, setAchievements] = useState<UserAchievement[]>([]);\r\n  const [reminders, setReminders] = useState<DonationReminder[]>([]);\r\n  const [activeTab, setActiveTab] = useState<string>('overview');\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const fetchDashboardData = async () => {\r\n        setLoading(true);\r\n        \r\n        try {\r\n          // Fetch user profile\r\n          const { data: profileData, error: profileError } = await supabase\r\n            .from('user_profiles')\r\n            .select('*')\r\n            .eq('id', user.id)\r\n            .single();\r\n            \r\n          if (profileError) {\r\n            console.error('Error fetching user profile:', profileError);\r\n          } else {\r\n            setUserProfile(profileData);\r\n          }\r\n          \r\n          // Fetch donations\r\n          const { data: donationsData } = await getUserDonations(user.id);\r\n          if (donationsData) {\r\n            setDonations(donationsData);\r\n          }\r\n          \r\n          // Fetch goals\r\n          const { data: goalsData } = await getUserDonationGoals(user.id);\r\n          if (goalsData) {\r\n            setGoals(goalsData);\r\n          }\r\n          \r\n          // Fetch achievements\r\n          const { data: achievementsData } = await getUserAchievements(user.id);\r\n          if (achievementsData) {\r\n            setAchievements(achievementsData);\r\n          }\r\n          \r\n          // Fetch reminders\r\n          const { data: remindersData } = await getUserReminders(user.id);\r\n          if (remindersData) {\r\n            setReminders(remindersData);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error loading dashboard data:', error);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n      \r\n      fetchDashboardData();\r\n    }\r\n  }, [user]);\r\n\r\n  const handleDonationAdded = (newDonation: Donation) => {\r\n    setDonations(prev => [newDonation, ...prev]);\r\n    \r\n    // Update user profile\r\n    if (userProfile) {\r\n      const updatedProfile = {\r\n        ...userProfile,\r\n        donation_count: userProfile.donation_count + 1,\r\n        last_donation_date: newDonation.donation_date\r\n      };\r\n      setUserProfile(updatedProfile);\r\n      \r\n      // Update profile in database\r\n      supabase\r\n        .from('user_profiles')\r\n        .update({\r\n          donation_count: updatedProfile.donation_count,\r\n          last_donation_date: updatedProfile.last_donation_date\r\n        })\r\n        .eq('id', user?.id)\r\n        .then(({ error }) => {\r\n          if (error) console.error('Error updating profile:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleGoalAdded = (newGoal: DonationGoal) => {\r\n    setGoals(prev => [...prev, newGoal]);\r\n  };\r\n\r\n  const handleGoalCompleted = (goalId: number) => {\r\n    setGoals(prev => \r\n      prev.map(goal => \r\n        goal.id === goalId ? { ...goal, is_completed: true } : goal\r\n      )\r\n    );\r\n  };\r\n\r\n  const getNextDonationDate = (): Date | null => {\r\n    if (!userProfile?.last_donation_date) return null;\r\n    return calculateNextDonationDate(userProfile.last_donation_date);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"dashboard-loading\">\r\n        <h2>Loading your dashboard...</h2>\r\n        <div className=\"spinner\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <header className=\"dashboard-header\">\r\n        <h1>Your Dashboard</h1>\r\n        <div className=\"dashboard-tabs\">\r\n          <button \r\n            className={`tab-btn ${activeTab === 'overview' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('overview')}\r\n          >\r\n            Overview\r\n          </button>\r\n          <button \r\n            className={`tab-btn ${activeTab === 'donations' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('donations')}\r\n          >\r\n            Donations\r\n          </button>\r\n          <button \r\n            className={`tab-btn ${activeTab === 'goals' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('goals')}\r\n          >\r\n            Goals\r\n          </button>\r\n          <button \r\n            className={`tab-btn ${activeTab === 'achievements' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('achievements')}\r\n          >\r\n            Achievements\r\n          </button>\r\n          <button \r\n            className={`tab-btn ${activeTab === 'reminders' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('reminders')}\r\n          >\r\n            Reminders\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"dashboard-content\">\r\n        {activeTab === 'overview' && (\r\n          <div className=\"dashboard-overview\">\r\n            <div className=\"dashboard-row\">\r\n              <div className=\"dashboard-card profile-card\">\r\n                <h2>Your Profile</h2>\r\n                {userProfile ? (\r\n                  <div className=\"profile-info\">\r\n                    <p><strong>Blood Type:</strong> {userProfile.blood_type || 'Not set'}</p>\r\n                    <p><strong>Region:</strong> {userProfile.region || 'Not set'}</p>\r\n                    <p><strong>Total Donations:</strong> {userProfile.donation_count || 0}</p>\r\n                    <p><strong>Last Donation:</strong> {userProfile.last_donation_date \r\n                      ? new Date(userProfile.last_donation_date).toLocaleDateString() \r\n                      : 'Never donated'}\r\n                    </p>\r\n                    <p><strong>Next Eligible Donation Date:</strong> {\r\n                      getNextDonationDate()\r\n                        ? getNextDonationDate()?.toLocaleDateString()\r\n                        : 'You can donate anytime'\r\n                    }</p>\r\n                  </div>\r\n                ) : (\r\n                  <p>Profile information not available</p>\r\n                )}\r\n              </div>\r\n              \r\n              <UserStats donations={donations} userProfile={userProfile} />\r\n            </div>\r\n            \r\n            <div className=\"dashboard-row\">\r\n              <div className=\"dashboard-card recent-donations\">\r\n                <h2>Recent Donations</h2>\r\n                <DonationHistory \r\n                  donations={donations.slice(0, 3)} \r\n                  showViewAll={() => setActiveTab('donations')} \r\n                />\r\n              </div>\r\n              \r\n              <div className=\"dashboard-card recent-achievements\">\r\n                <h2>Recent Achievements</h2>\r\n                <AchievementsSection \r\n                  achievements={achievements.slice(0, 3)} \r\n                  showViewAll={() => setActiveTab('achievements')} \r\n                  compact={true}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"dashboard-row\">\r\n              <div className=\"dashboard-card active-goals\">\r\n                <h2>Active Goals</h2>\r\n                <GoalTracker \r\n                  goals={goals.filter(g => !g.is_completed).slice(0, 2)} \r\n                  showViewAll={() => setActiveTab('goals')} \r\n                  compact={true}\r\n                  onGoalCompleted={handleGoalCompleted} \r\n                  currentDonationCount={userProfile?.donation_count || 0}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"dashboard-card upcoming-reminders\">\r\n                <h2>Upcoming Reminders</h2>\r\n                <RemindersSection \r\n                  reminders={reminders.filter(r => !r.is_read).slice(0, 3)} \r\n                  showViewAll={() => setActiveTab('reminders')} \r\n                  compact={true}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'donations' && (\r\n          <div className=\"dashboard-donations\">\r\n            <div className=\"dashboard-row\">\r\n              <div className=\"dashboard-card\">\r\n                <h2>Add New Donation</h2>\r\n                <DonationForm onDonationAdded={handleDonationAdded} userId={user?.id || ''} />\r\n              </div>\r\n            </div>\r\n            <div className=\"dashboard-row\">\r\n              <div className=\"dashboard-card full-width\">\r\n                <h2>Donation History</h2>\r\n                <DonationHistory donations={donations} showViewAll={null} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'goals' && (\r\n          <div className=\"dashboard-goals\">\r\n            <div className=\"dashboard-row\">\r\n              <div className=\"dashboard-card full-width\">\r\n                <h2>Your Donation Goals</h2>\r\n                <GoalTracker \r\n                  goals={goals} \r\n                  showViewAll={null} \r\n                  compact={false}\r\n                  onGoalCompleted={handleGoalCompleted} \r\n                  currentDonationCount={userProfile?.donation_count || 0}\r\n                  onGoalAdded={handleGoalAdded}\r\n                  userId={user?.id || ''}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'achievements' && (\r\n          <div className=\"dashboard-achievements\">\r\n            <div className=\"dashboard-row\">\r\n              <div className=\"dashboard-card full-width\">\r\n                <h2>Your Achievements</h2>\r\n                <AchievementsSection \r\n                  achievements={achievements} \r\n                  showViewAll={null} \r\n                  compact={false}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'reminders' && (\r\n          <div className=\"dashboard-reminders\">\r\n            <div className=\"dashboard-row\">\r\n              <div className=\"dashboard-card full-width\">\r\n                <h2>Your Donation Reminders</h2>\r\n                <RemindersSection \r\n                  reminders={reminders} \r\n                  showViewAll={null} \r\n                  compact={false}\r\n                  userId={user?.id || ''}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}