{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yatir\\\\finalProjectReact\\\\frontend\\\\src\\\\components\\\\Auth\\\\LoginForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { supabase } from '../../services/supabaseClient';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    signIn,\n    user,\n    refreshSession\n  } = useAuth();\n  const navigate = useNavigate();\n\n  // Check if user is already logged in - only once on mount\n  useEffect(() => {\n    const checkSession = async () => {\n      if (process.env.NODE_ENV === 'development') {\n        console.log('LoginForm: Checking for existing session...');\n      }\n      try {\n        // Use refreshSession from AuthContext\n        await refreshSession();\n      } catch (error) {\n        console.error('LoginForm: Error checking session:', error);\n      }\n    };\n    checkSession();\n    // Don't include refreshSession in dependencies to avoid unnecessary calls\n  }, []);\n\n  // Redirect if user becomes logged in\n  useEffect(() => {\n    if (user) {\n      if (process.env.NODE_ENV === 'development') {\n        console.log('LoginForm: User detected, redirecting to dashboard');\n      }\n      navigate('/dashboard');\n    }\n  }, [user, navigate]);\n\n  // Memoize the submit handler to prevent recreating on each render\n  const handleSubmit = useCallback(async e => {\n    e.preventDefault();\n    if (!email || !password) {\n      setErrorMessage('Please enter both email and password');\n      return;\n    }\n    try {\n      if (process.env.NODE_ENV === 'development') {\n        console.log('LoginForm: Attempting to sign in user:', email);\n      }\n      setIsLoading(true);\n      setErrorMessage('');\n\n      // Test Supabase connection before attempting login\n      console.log('LoginForm: Testing Supabase connection...');\n      const testConnection = await supabase.from('blood_types').select('count');\n      if (testConnection.error) {\n        console.error('LoginForm: Supabase connection test failed:', testConnection.error);\n        setErrorMessage('Database connection error. Please try again later.');\n        return;\n      }\n      console.log('LoginForm: Supabase connection successful, proceeding with login');\n      const {\n        error\n      } = await signIn(email, password);\n      if (error) {\n        console.error('LoginForm: Sign in error:', error);\n        setErrorMessage(error.message || 'Failed to sign in');\n        return;\n      }\n      if (process.env.NODE_ENV === 'development') {\n        console.log('LoginForm: Sign in successful');\n      }\n      toast.success('Login successful!');\n\n      // Navigate to dashboard - the user effect will handle this\n    } catch (err) {\n      console.error('LoginForm: Exception during sign in:', err);\n      setErrorMessage(err.message || 'An unexpected error occurred');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [email, password, signIn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          disabled: isLoading,\n          placeholder: \"Enter your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          disabled: isLoading,\n          placeholder: \"Enter your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"auth-button\",\n        disabled: isLoading,\n        children: isLoading ? 'Logging in...' : 'Log In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-links\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/forgot-password\",\n        children: \"Forgot password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"9mO/KrkAZqXRPO/nlWenzYalhX0=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Link","useNavigate","useAuth","supabase","toast","jsxDEV","_jsxDEV","LoginForm","_s","email","setEmail","password","setPassword","errorMessage","setErrorMessage","isLoading","setIsLoading","signIn","user","refreshSession","navigate","checkSession","process","env","NODE_ENV","console","log","error","handleSubmit","e","preventDefault","testConnection","from","select","message","success","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","disabled","placeholder","to","_c","$RefreshReg$"],"sources":["C:/Users/yatir/finalProjectReact/frontend/src/components/Auth/LoginForm.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { supabase } from '../../services/supabaseClient';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst LoginForm: React.FC = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { signIn, user, refreshSession } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  // Check if user is already logged in - only once on mount\r\n  useEffect(() => {\r\n    const checkSession = async () => {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log('LoginForm: Checking for existing session...');\r\n      }\r\n      \r\n      try {\r\n        // Use refreshSession from AuthContext\r\n        await refreshSession();\r\n      } catch (error) {\r\n        console.error('LoginForm: Error checking session:', error);\r\n      }\r\n    };\r\n    \r\n    checkSession();\r\n    // Don't include refreshSession in dependencies to avoid unnecessary calls\r\n  }, []);\r\n\r\n  // Redirect if user becomes logged in\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log('LoginForm: User detected, redirecting to dashboard');\r\n      }\r\n      navigate('/dashboard');\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  // Memoize the submit handler to prevent recreating on each render\r\n  const handleSubmit = useCallback(async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!email || !password) {\r\n      setErrorMessage('Please enter both email and password');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log('LoginForm: Attempting to sign in user:', email);\r\n      }\r\n      setIsLoading(true);\r\n      setErrorMessage('');\r\n      \r\n      // Test Supabase connection before attempting login\r\n      console.log('LoginForm: Testing Supabase connection...');\r\n      const testConnection = await supabase.from('blood_types').select('count');\r\n      if (testConnection.error) {\r\n        console.error('LoginForm: Supabase connection test failed:', testConnection.error);\r\n        setErrorMessage('Database connection error. Please try again later.');\r\n        return;\r\n      }\r\n      \r\n      console.log('LoginForm: Supabase connection successful, proceeding with login');\r\n      const { error } = await signIn(email, password);\r\n      \r\n      if (error) {\r\n        console.error('LoginForm: Sign in error:', error);\r\n        setErrorMessage(error.message || 'Failed to sign in');\r\n        return;\r\n      }\r\n      \r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log('LoginForm: Sign in successful');\r\n      }\r\n      toast.success('Login successful!');\r\n      \r\n      // Navigate to dashboard - the user effect will handle this\r\n    } catch (err: any) {\r\n      console.error('LoginForm: Exception during sign in:', err);\r\n      setErrorMessage(err.message || 'An unexpected error occurred');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [email, password, signIn]);\r\n\r\n  return (\r\n    <div className=\"auth-form-container\">\r\n      <h2>Log In</h2>\r\n      \r\n      {errorMessage && (\r\n        <div className=\"error-message\">\r\n          {errorMessage}\r\n        </div>\r\n      )}\r\n      \r\n      <form onSubmit={handleSubmit} className=\"auth-form\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n            disabled={isLoading}\r\n            placeholder=\"Enter your email\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n            disabled={isLoading}\r\n            placeholder=\"Enter your password\"\r\n          />\r\n        </div>\r\n        \r\n        <button type=\"submit\" className=\"auth-button\" disabled={isLoading}>\r\n          {isLoading ? 'Logging in...' : 'Log In'}\r\n        </button>\r\n      </form>\r\n      \r\n      <div className=\"auth-links\">\r\n        <Link to=\"/forgot-password\">Forgot password?</Link>\r\n        <p>\r\n          Don't have an account? <Link to=\"/register\">Sign up</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}