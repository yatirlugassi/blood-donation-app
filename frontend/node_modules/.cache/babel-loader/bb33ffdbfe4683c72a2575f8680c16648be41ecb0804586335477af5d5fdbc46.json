{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yatir\\\\finalProjectReact\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\GoalTracker.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { addDonationGoal, updateDonationGoal } from '../../services/dashboardService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GoalTracker = ({\n  goals,\n  showViewAll,\n  compact,\n  onGoalCompleted,\n  currentDonationCount,\n  onGoalAdded,\n  userId\n}) => {\n  _s();\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [newGoal, setNewGoal] = useState({\n    target_count: currentDonationCount + 1,\n    target_date: '',\n    title: '',\n    description: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleGoalSubmit = async e => {\n    e.preventDefault();\n    if (!userId) {\n      setError('User ID is required');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const goalData = {\n        ...newGoal,\n        user_id: userId,\n        is_completed: false,\n        target_date: newGoal.target_date || null,\n        description: newGoal.description || null\n      };\n      const {\n        data,\n        error\n      } = await addDonationGoal(goalData);\n      if (error) {\n        throw new Error(error.message);\n      }\n      if (data && onGoalAdded) {\n        onGoalAdded(data);\n        setShowAddForm(false);\n        setNewGoal({\n          target_count: currentDonationCount + 1,\n          target_date: '',\n          title: '',\n          description: ''\n        });\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An unexpected error occurred');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleMarkCompleted = async goal => {\n    try {\n      const {\n        error\n      } = await updateDonationGoal(goal.id, {\n        is_completed: true\n      });\n      if (error) {\n        throw new Error(error.message);\n      }\n      onGoalCompleted(goal.id);\n    } catch (err) {\n      console.error('Error marking goal as completed:', err);\n    }\n  };\n  const calculateProgress = goal => {\n    if (goal.target_count <= 0) return 0;\n    const progress = currentDonationCount / goal.target_count * 100;\n    return Math.min(progress, 100); // Cap at 100%\n  };\n  const getTimeLeft = goal => {\n    if (!goal.target_date) return 'No deadline';\n    const targetDate = new Date(goal.target_date);\n    const now = new Date();\n    if (targetDate <= now) return 'Expired';\n    const diffTime = Math.abs(targetDate.getTime() - now.getTime());\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return `${diffDays} days left`;\n  };\n  if (goals.length === 0 && !showAddForm) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-goals\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You haven't set any donation goals yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), !compact && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-goal-btn\",\n        onClick: () => setShowAddForm(true),\n        children: \"Set a Donation Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"goal-tracker\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this), showAddForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-goal-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleGoalSubmit,\n        className: \"add-goal-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Goal Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            value: newGoal.title,\n            onChange: e => setNewGoal({\n              ...newGoal,\n              title: e.target.value\n            }),\n            placeholder: \"e.g., Become a Regular Donor\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"target_count\",\n            children: \"Target Donations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"target_count\",\n            value: newGoal.target_count,\n            onChange: e => setNewGoal({\n              ...newGoal,\n              target_count: parseInt(e.target.value)\n            }),\n            min: currentDonationCount + 1,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"target_date\",\n            children: \"Target Date (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"target_date\",\n            value: newGoal.target_date,\n            onChange: e => setNewGoal({\n              ...newGoal,\n              target_date: e.target.value\n            }),\n            min: new Date().toISOString().split('T')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            value: newGoal.description,\n            onChange: e => setNewGoal({\n              ...newGoal,\n              description: e.target.value\n            }),\n            placeholder: \"Why do you want to achieve this goal?\",\n            rows: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"cancel-btn\",\n            onClick: () => setShowAddForm(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"save-goal-btn\",\n            disabled: loading,\n            children: loading ? 'Creating...' : 'Create Goal'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `goals-list ${compact ? 'compact' : ''}`,\n        children: goals.map(goal => {\n          const progress = calculateProgress(goal);\n          const progressClassName = progress >= 100 ? 'progress-complete' : 'progress-incomplete';\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `goal-item ${goal.is_completed ? 'completed' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"goal-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"goal-title\",\n                children: goal.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this), !compact && goal.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"goal-description\",\n                children: goal.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"goal-progress-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `goal-progress-bar ${progressClassName}`,\n                  style: {\n                    width: `${progress}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"goal-progress-text\",\n                  children: [currentDonationCount, \" of \", goal.target_count, \" donations\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"goal-meta\",\n                children: goal.target_date && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"goal-deadline\",\n                  children: getTimeLeft(goal)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this), !compact && !goal.is_completed && currentDonationCount >= goal.target_count && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"mark-complete-btn\",\n              onClick: () => handleMarkCompleted(goal),\n              children: \"Mark as Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 21\n            }, this)]\n          }, goal.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), !compact && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"goals-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-goal-btn\",\n          onClick: () => setShowAddForm(true),\n          children: \"Add New Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }, this), showViewAll && goals.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-all-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"view-all-btn\",\n          onClick: showViewAll,\n          children: \"View All Goals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(GoalTracker, \"BqmptAa3ZswKZjugutQe7yQAOlw=\");\n_c = GoalTracker;\nexport default GoalTracker;\nvar _c;\n$RefreshReg$(_c, \"GoalTracker\");","map":{"version":3,"names":["React","useState","addDonationGoal","updateDonationGoal","jsxDEV","_jsxDEV","Fragment","_Fragment","GoalTracker","goals","showViewAll","compact","onGoalCompleted","currentDonationCount","onGoalAdded","userId","_s","showAddForm","setShowAddForm","newGoal","setNewGoal","target_count","target_date","title","description","loading","setLoading","error","setError","handleGoalSubmit","e","preventDefault","goalData","user_id","is_completed","data","Error","message","err","handleMarkCompleted","goal","id","console","calculateProgress","progress","Math","min","getTimeLeft","targetDate","Date","now","diffTime","abs","getTime","diffDays","ceil","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","type","value","onChange","target","placeholder","required","parseInt","toISOString","split","rows","disabled","map","progressClassName","style","width","_c","$RefreshReg$"],"sources":["C:/Users/yatir/finalProjectReact/frontend/src/components/Dashboard/GoalTracker.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { DonationGoal, addDonationGoal, updateDonationGoal } from '../../services/dashboardService';\r\n\r\ninterface GoalTrackerProps {\r\n  goals: DonationGoal[];\r\n  showViewAll: (() => void) | null;\r\n  compact: boolean;\r\n  onGoalCompleted: (goalId: number) => void;\r\n  currentDonationCount: number;\r\n  onGoalAdded?: (goal: DonationGoal) => void;\r\n  userId?: string;\r\n}\r\n\r\nconst GoalTracker: React.FC<GoalTrackerProps> = ({\r\n  goals,\r\n  showViewAll,\r\n  compact,\r\n  onGoalCompleted,\r\n  currentDonationCount,\r\n  onGoalAdded,\r\n  userId\r\n}) => {\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n  const [newGoal, setNewGoal] = useState({\r\n    target_count: currentDonationCount + 1,\r\n    target_date: '',\r\n    title: '',\r\n    description: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const handleGoalSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!userId) {\r\n      setError('User ID is required');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const goalData = {\r\n        ...newGoal,\r\n        user_id: userId,\r\n        is_completed: false,\r\n        target_date: newGoal.target_date || null,\r\n        description: newGoal.description || null\r\n      };\r\n\r\n      const { data, error } = await addDonationGoal(goalData);\r\n\r\n      if (error) {\r\n        throw new Error(error.message);\r\n      }\r\n\r\n      if (data && onGoalAdded) {\r\n        onGoalAdded(data);\r\n        setShowAddForm(false);\r\n        setNewGoal({\r\n          target_count: currentDonationCount + 1,\r\n          target_date: '',\r\n          title: '',\r\n          description: '',\r\n        });\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An unexpected error occurred');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleMarkCompleted = async (goal: DonationGoal) => {\r\n    try {\r\n      const { error } = await updateDonationGoal(goal.id, { is_completed: true });\r\n      \r\n      if (error) {\r\n        throw new Error(error.message);\r\n      }\r\n      \r\n      onGoalCompleted(goal.id);\r\n    } catch (err) {\r\n      console.error('Error marking goal as completed:', err);\r\n    }\r\n  };\r\n\r\n  const calculateProgress = (goal: DonationGoal) => {\r\n    if (goal.target_count <= 0) return 0;\r\n    const progress = (currentDonationCount / goal.target_count) * 100;\r\n    return Math.min(progress, 100); // Cap at 100%\r\n  };\r\n\r\n  const getTimeLeft = (goal: DonationGoal) => {\r\n    if (!goal.target_date) return 'No deadline';\r\n    \r\n    const targetDate = new Date(goal.target_date);\r\n    const now = new Date();\r\n    \r\n    if (targetDate <= now) return 'Expired';\r\n    \r\n    const diffTime = Math.abs(targetDate.getTime() - now.getTime());\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    \r\n    return `${diffDays} days left`;\r\n  };\r\n\r\n  if (goals.length === 0 && !showAddForm) {\r\n    return (\r\n      <div className=\"no-goals\">\r\n        <p>You haven't set any donation goals yet.</p>\r\n        {!compact && (\r\n          <button \r\n            className=\"add-goal-btn\" \r\n            onClick={() => setShowAddForm(true)}\r\n          >\r\n            Set a Donation Goal\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"goal-tracker\">\r\n      {error && <div className=\"error-message\">Error: {error}</div>}\r\n      \r\n      {showAddForm ? (\r\n        <div className=\"add-goal-form-container\">\r\n          <h3>Create New Goal</h3>\r\n          <form onSubmit={handleGoalSubmit} className=\"add-goal-form\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Goal Title</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"title\"\r\n                value={newGoal.title}\r\n                onChange={(e) => setNewGoal({...newGoal, title: e.target.value})}\r\n                placeholder=\"e.g., Become a Regular Donor\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"target_count\">Target Donations</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"target_count\"\r\n                value={newGoal.target_count}\r\n                onChange={(e) => setNewGoal({...newGoal, target_count: parseInt(e.target.value)})}\r\n                min={currentDonationCount + 1}\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"target_date\">Target Date (Optional)</label>\r\n              <input\r\n                type=\"date\"\r\n                id=\"target_date\"\r\n                value={newGoal.target_date}\r\n                onChange={(e) => setNewGoal({...newGoal, target_date: e.target.value})}\r\n                min={new Date().toISOString().split('T')[0]}\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description (Optional)</label>\r\n              <textarea\r\n                id=\"description\"\r\n                value={newGoal.description}\r\n                onChange={(e) => setNewGoal({...newGoal, description: e.target.value})}\r\n                placeholder=\"Why do you want to achieve this goal?\"\r\n                rows={3}\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-actions\">\r\n              <button \r\n                type=\"button\" \r\n                className=\"cancel-btn\"\r\n                onClick={() => setShowAddForm(false)}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button \r\n                type=\"submit\" \r\n                className=\"save-goal-btn\"\r\n                disabled={loading}\r\n              >\r\n                {loading ? 'Creating...' : 'Create Goal'}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className={`goals-list ${compact ? 'compact' : ''}`}>\r\n            {goals.map((goal) => {\r\n              const progress = calculateProgress(goal);\r\n              const progressClassName = progress >= 100 ? 'progress-complete' : 'progress-incomplete';\r\n              \r\n              return (\r\n                <div key={goal.id} className={`goal-item ${goal.is_completed ? 'completed' : ''}`}>\r\n                  <div className=\"goal-info\">\r\n                    <h3 className=\"goal-title\">{goal.title}</h3>\r\n                    {!compact && goal.description && (\r\n                      <p className=\"goal-description\">{goal.description}</p>\r\n                    )}\r\n                    \r\n                    <div className=\"goal-progress-container\">\r\n                      <div \r\n                        className={`goal-progress-bar ${progressClassName}`}\r\n                        style={{ width: `${progress}%` }}\r\n                      ></div>\r\n                      <div className=\"goal-progress-text\">\r\n                        {currentDonationCount} of {goal.target_count} donations\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"goal-meta\">\r\n                      {goal.target_date && (\r\n                        <span className=\"goal-deadline\">\r\n                          {getTimeLeft(goal)}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {!compact && !goal.is_completed && currentDonationCount >= goal.target_count && (\r\n                    <button\r\n                      className=\"mark-complete-btn\"\r\n                      onClick={() => handleMarkCompleted(goal)}\r\n                    >\r\n                      Mark as Completed\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          \r\n          {!compact && (\r\n            <div className=\"goals-actions\">\r\n              <button \r\n                className=\"add-goal-btn\" \r\n                onClick={() => setShowAddForm(true)}\r\n              >\r\n                Add New Goal\r\n              </button>\r\n            </div>\r\n          )}\r\n          \r\n          {showViewAll && goals.length > 0 && (\r\n            <div className=\"view-all-container\">\r\n              <button className=\"view-all-btn\" onClick={showViewAll}>\r\n                View All Goals\r\n              </button>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoalTracker; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}