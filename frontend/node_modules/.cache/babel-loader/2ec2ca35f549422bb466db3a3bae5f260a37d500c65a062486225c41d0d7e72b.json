{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yatir\\\\finalProjectReact\\\\frontend\\\\src\\\\components\\\\Auth\\\\TestLogin.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../../services/supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestLogin = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [status, setStatus] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState(null);\n\n  // Check connection on component mount\n  useEffect(() => {\n    // Log that we're initializing\n    console.log('TestLogin: Component mounted, ready to test Supabase connection');\n  }, []);\n  const checkConnection = async () => {\n    setStatus('Checking connection...');\n    setLoading(true);\n\n    // Set a timeout to prevent hanging\n    const timeoutId = setTimeout(() => {\n      if (loading) {\n        setStatus('Connection timeout. The request took too long to complete.');\n        setLoading(false);\n      }\n    }, 5000);\n    try {\n      console.log('TestLogin: Testing connection to Supabase...');\n\n      // Use a simpler query with a short timeout\n      const {\n        data,\n        error\n      } = await supabase.from('blood_types').select('count').limit(1).maybeSingle();\n\n      // Clear the timeout since we got a response\n      clearTimeout(timeoutId);\n      if (error) {\n        console.error('TestLogin: Connection error:', error);\n        setStatus(`Connection error: ${error.message}`);\n      } else {\n        console.log('TestLogin: Connection successful:', data);\n        setStatus(`Connection successful! Response: ${JSON.stringify(data)}`);\n      }\n    } catch (err) {\n      // Clear the timeout since we got a response\n      clearTimeout(timeoutId);\n      console.error('TestLogin: Exception during connection test:', err);\n      setStatus(`Exception: ${err.message}`);\n    } finally {\n      if (loading) {\n        setLoading(false);\n      }\n    }\n  };\n  const checkSession = async () => {\n    setStatus('Checking session...');\n    setLoading(true);\n    try {\n      console.log('TestLogin: Checking for existing session...');\n      const {\n        data,\n        error\n      } = await supabase.auth.getSession();\n      if (error) {\n        console.error('TestLogin: Session error:', error);\n        setStatus(`Session error: ${error.message}`);\n      } else if (data.session) {\n        console.log('TestLogin: Session found:', data.session.user.email);\n        setStatus(`Session found: ${data.session.user.email}`);\n        setUser(data.session.user);\n      } else {\n        console.log('TestLogin: No active session found');\n        setStatus('No active session');\n      }\n    } catch (err) {\n      console.error('TestLogin: Exception during session check:', err);\n      setStatus(`Exception: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    setStatus('Logging in...');\n    setLoading(true);\n    try {\n      console.log('TestLogin: Attempting to sign in user:', email);\n\n      // First check connection\n      const connectionTest = await supabase.from('blood_types').select('count');\n      if (connectionTest.error) {\n        console.error('TestLogin: Connection test failed before login:', connectionTest.error);\n        setStatus(`Database connection error: ${connectionTest.error.message}`);\n        setLoading(false);\n        return;\n      }\n      console.log('TestLogin: Connection test passed, proceeding with login');\n      const {\n        data,\n        error\n      } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n      if (error) {\n        console.error('TestLogin: Login error:', error);\n        setStatus(`Login error: ${error.message}`);\n      } else {\n        var _data$user, _data$user2;\n        console.log('TestLogin: Login successful:', (_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.email);\n        setStatus(`Login successful! User: ${(_data$user2 = data.user) === null || _data$user2 === void 0 ? void 0 : _data$user2.email}`);\n        setUser(data.user);\n      }\n    } catch (err) {\n      console.error('TestLogin: Exception during login:', err);\n      setStatus(`Exception: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleLogout = async () => {\n    setStatus('Logging out...');\n    setLoading(true);\n    try {\n      console.log('TestLogin: Signing out user');\n      const {\n        error\n      } = await supabase.auth.signOut();\n      if (error) {\n        console.error('TestLogin: Logout error:', error);\n        setStatus(`Logout error: ${error.message}`);\n      } else {\n        console.log('TestLogin: Logout successful');\n        setStatus('Logged out successfully');\n        setUser(null);\n      }\n    } catch (err) {\n      console.error('TestLogin: Exception during logout:', err);\n      setStatus(`Exception: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '500px',\n      margin: '0 auto',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Supabase Auth Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkConnection,\n        disabled: loading,\n        style: {\n          marginRight: '10px',\n          padding: '8px 16px'\n        },\n        children: \"Test Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkSession,\n        disabled: loading,\n        style: {\n          padding: '8px 16px'\n        },\n        children: \"Check Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px',\n        padding: '15px',\n        border: '1px solid #ddd',\n        borderRadius: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Logged in as: \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User ID: \", user.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        disabled: loading,\n        style: {\n          padding: '8px 16px',\n          backgroundColor: '#f44336',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px'\n        },\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px'\n          },\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          disabled: loading,\n          style: {\n            width: '100%',\n            padding: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px'\n          },\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          disabled: loading,\n          style: {\n            width: '100%',\n            padding: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        style: {\n          padding: '8px 16px',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px'\n        },\n        children: loading ? 'Processing...' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        padding: '15px',\n        backgroundColor: '#f5f5f5',\n        borderRadius: '5px',\n        minHeight: '100px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          whiteSpace: 'pre-wrap',\n          wordBreak: 'break-word'\n        },\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(TestLogin, \"iOL+YNaM4vbHJb6aE0Gl12xfpIU=\");\n_c = TestLogin;\nexport default TestLogin;\nvar _c;\n$RefreshReg$(_c, \"TestLogin\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","TestLogin","_s","email","setEmail","password","setPassword","status","setStatus","loading","setLoading","user","setUser","console","log","checkConnection","timeoutId","setTimeout","data","error","from","select","limit","maybeSingle","clearTimeout","message","JSON","stringify","err","checkSession","auth","getSession","session","handleLogin","e","preventDefault","connectionTest","signInWithPassword","_data$user","_data$user2","handleLogout","signOut","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","onClick","disabled","marginRight","border","borderRadius","id","backgroundColor","color","onSubmit","display","type","value","onChange","target","required","width","marginTop","minHeight","whiteSpace","wordBreak","_c","$RefreshReg$"],"sources":["C:/Users/yatir/finalProjectReact/frontend/src/components/Auth/TestLogin.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../../services/supabaseClient';\r\n\r\nconst TestLogin: React.FC = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [status, setStatus] = useState<string>('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [user, setUser] = useState<any>(null);\r\n\r\n  // Check connection on component mount\r\n  useEffect(() => {\r\n    // Log that we're initializing\r\n    console.log('TestLogin: Component mounted, ready to test Supabase connection');\r\n  }, []);\r\n\r\n  const checkConnection = async () => {\r\n    setStatus('Checking connection...');\r\n    setLoading(true);\r\n    \r\n    // Set a timeout to prevent hanging\r\n    const timeoutId = setTimeout(() => {\r\n      if (loading) {\r\n        setStatus('Connection timeout. The request took too long to complete.');\r\n        setLoading(false);\r\n      }\r\n    }, 5000);\r\n    \r\n    try {\r\n      console.log('TestLogin: Testing connection to Supabase...');\r\n      \r\n      // Use a simpler query with a short timeout\r\n      const { data, error } = await supabase\r\n        .from('blood_types')\r\n        .select('count')\r\n        .limit(1)\r\n        .maybeSingle();\r\n      \r\n      // Clear the timeout since we got a response\r\n      clearTimeout(timeoutId);\r\n      \r\n      if (error) {\r\n        console.error('TestLogin: Connection error:', error);\r\n        setStatus(`Connection error: ${error.message}`);\r\n      } else {\r\n        console.log('TestLogin: Connection successful:', data);\r\n        setStatus(`Connection successful! Response: ${JSON.stringify(data)}`);\r\n      }\r\n    } catch (err: any) {\r\n      // Clear the timeout since we got a response\r\n      clearTimeout(timeoutId);\r\n      \r\n      console.error('TestLogin: Exception during connection test:', err);\r\n      setStatus(`Exception: ${err.message}`);\r\n    } finally {\r\n      if (loading) {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkSession = async () => {\r\n    setStatus('Checking session...');\r\n    setLoading(true);\r\n    \r\n    try {\r\n      console.log('TestLogin: Checking for existing session...');\r\n      const { data, error } = await supabase.auth.getSession();\r\n      \r\n      if (error) {\r\n        console.error('TestLogin: Session error:', error);\r\n        setStatus(`Session error: ${error.message}`);\r\n      } else if (data.session) {\r\n        console.log('TestLogin: Session found:', data.session.user.email);\r\n        setStatus(`Session found: ${data.session.user.email}`);\r\n        setUser(data.session.user);\r\n      } else {\r\n        console.log('TestLogin: No active session found');\r\n        setStatus('No active session');\r\n      }\r\n    } catch (err: any) {\r\n      console.error('TestLogin: Exception during session check:', err);\r\n      setStatus(`Exception: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setStatus('Logging in...');\r\n    setLoading(true);\r\n    \r\n    try {\r\n      console.log('TestLogin: Attempting to sign in user:', email);\r\n      \r\n      // First check connection\r\n      const connectionTest = await supabase.from('blood_types').select('count');\r\n      if (connectionTest.error) {\r\n        console.error('TestLogin: Connection test failed before login:', connectionTest.error);\r\n        setStatus(`Database connection error: ${connectionTest.error.message}`);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      console.log('TestLogin: Connection test passed, proceeding with login');\r\n      const { data, error } = await supabase.auth.signInWithPassword({\r\n        email,\r\n        password\r\n      });\r\n      \r\n      if (error) {\r\n        console.error('TestLogin: Login error:', error);\r\n        setStatus(`Login error: ${error.message}`);\r\n      } else {\r\n        console.log('TestLogin: Login successful:', data.user?.email);\r\n        setStatus(`Login successful! User: ${data.user?.email}`);\r\n        setUser(data.user);\r\n      }\r\n    } catch (err: any) {\r\n      console.error('TestLogin: Exception during login:', err);\r\n      setStatus(`Exception: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    setStatus('Logging out...');\r\n    setLoading(true);\r\n    \r\n    try {\r\n      console.log('TestLogin: Signing out user');\r\n      const { error } = await supabase.auth.signOut();\r\n      \r\n      if (error) {\r\n        console.error('TestLogin: Logout error:', error);\r\n        setStatus(`Logout error: ${error.message}`);\r\n      } else {\r\n        console.log('TestLogin: Logout successful');\r\n        setStatus('Logged out successfully');\r\n        setUser(null);\r\n      }\r\n    } catch (err: any) {\r\n      console.error('TestLogin: Exception during logout:', err);\r\n      setStatus(`Exception: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '500px', margin: '0 auto', padding: '20px' }}>\r\n      <h1>Supabase Auth Test</h1>\r\n      \r\n      <div style={{ marginBottom: '20px' }}>\r\n        <button \r\n          onClick={checkConnection} \r\n          disabled={loading}\r\n          style={{ marginRight: '10px', padding: '8px 16px' }}\r\n        >\r\n          Test Connection\r\n        </button>\r\n        \r\n        <button \r\n          onClick={checkSession} \r\n          disabled={loading}\r\n          style={{ padding: '8px 16px' }}\r\n        >\r\n          Check Session\r\n        </button>\r\n      </div>\r\n      \r\n      {user ? (\r\n        <div style={{ marginBottom: '20px', padding: '15px', border: '1px solid #ddd', borderRadius: '5px' }}>\r\n          <h3>Logged in as: {user.email}</h3>\r\n          <p>User ID: {user.id}</p>\r\n          <button \r\n            onClick={handleLogout} \r\n            disabled={loading}\r\n            style={{ padding: '8px 16px', backgroundColor: '#f44336', color: 'white', border: 'none', borderRadius: '4px' }}\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <form onSubmit={handleLogin} style={{ marginBottom: '20px' }}>\r\n          <div style={{ marginBottom: '10px' }}>\r\n            <label style={{ display: 'block', marginBottom: '5px' }}>Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n              disabled={loading}\r\n              style={{ width: '100%', padding: '8px' }}\r\n            />\r\n          </div>\r\n          \r\n          <div style={{ marginBottom: '15px' }}>\r\n            <label style={{ display: 'block', marginBottom: '5px' }}>Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              disabled={loading}\r\n              style={{ width: '100%', padding: '8px' }}\r\n            />\r\n          </div>\r\n          \r\n          <button \r\n            type=\"submit\" \r\n            disabled={loading}\r\n            style={{ padding: '8px 16px', backgroundColor: '#4CAF50', color: 'white', border: 'none', borderRadius: '4px' }}\r\n          >\r\n            {loading ? 'Processing...' : 'Login'}\r\n          </button>\r\n        </form>\r\n      )}\r\n      \r\n      <div style={{ \r\n        marginTop: '20px', \r\n        padding: '15px', \r\n        backgroundColor: '#f5f5f5', \r\n        borderRadius: '5px',\r\n        minHeight: '100px'\r\n      }}>\r\n        <h3>Status:</h3>\r\n        <pre style={{ whiteSpace: 'pre-wrap', wordBreak: 'break-word' }}>{status}</pre>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestLogin; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}