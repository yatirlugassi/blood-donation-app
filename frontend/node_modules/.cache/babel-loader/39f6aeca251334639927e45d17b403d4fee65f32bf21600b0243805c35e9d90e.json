{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yatir\\\\finalProjectReact\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\UserStats.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserStats = ({\n  donations,\n  userProfile\n}) => {\n  // Calculate total blood donated (in ml)\n  const totalBloodDonated = donations.reduce((sum, donation) => sum + donation.blood_amount_ml, 0);\n\n  // Calculate donations by type\n  const donationsByType = donations.reduce((acc, donation) => {\n    const type = donation.donation_type || 'Unknown';\n    acc[type] = (acc[type] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Calculate average interval between donations (in days)\n  const calculateAverageDonationInterval = () => {\n    if (donations.length < 2) return 'N/A';\n\n    // Sort donations by date (oldest first)\n    const sortedDonations = [...donations].sort((a, b) => new Date(a.donation_date).getTime() - new Date(b.donation_date).getTime());\n    let totalDays = 0;\n    for (let i = 1; i < sortedDonations.length; i++) {\n      const prevDate = new Date(sortedDonations[i - 1].donation_date);\n      const currDate = new Date(sortedDonations[i].donation_date);\n      const diffTime = Math.abs(currDate.getTime() - prevDate.getTime());\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n      totalDays += diffDays;\n    }\n    const averageDays = Math.round(totalDays / (sortedDonations.length - 1));\n    return `${averageDays} days`;\n  };\n\n  // Calculate potential lives saved (rough estimate: 1 donation can save up to 3 lives)\n  const potentialLivesSaved = donations.length * 3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-card stats-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Impact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: (userProfile === null || userProfile === void 0 ? void 0 : userProfile.donation_count) || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Total Donations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: totalBloodDonated > 0 ? `${(totalBloodDonated / 1000).toFixed(1)}L` : '0L'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Blood Donated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: potentialLivesSaved\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Lives Potentially Saved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: calculateAverageDonationInterval()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Avg. Interval\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), Object.keys(donationsByType).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"donation-types\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Donation Types\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"donation-types-list\",\n        children: Object.entries(donationsByType).map(([type, count]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"donation-type\",\n            children: type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"donation-count\",\n            children: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, type, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_c = UserStats;\nexport default UserStats;\nvar _c;\n$RefreshReg$(_c, \"UserStats\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","UserStats","donations","userProfile","totalBloodDonated","reduce","sum","donation","blood_amount_ml","donationsByType","acc","type","donation_type","calculateAverageDonationInterval","length","sortedDonations","sort","a","b","Date","donation_date","getTime","totalDays","i","prevDate","currDate","diffTime","Math","abs","diffDays","ceil","averageDays","round","potentialLivesSaved","className","children","fileName","_jsxFileName","lineNumber","columnNumber","donation_count","toFixed","Object","keys","entries","map","count","_c","$RefreshReg$"],"sources":["C:/Users/yatir/finalProjectReact/frontend/src/components/Dashboard/UserStats.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Donation } from '../../services/dashboardService';\r\n\r\ninterface UserStatsProps {\r\n  donations: Donation[];\r\n  userProfile: any | null;\r\n}\r\n\r\nconst UserStats: React.FC<UserStatsProps> = ({ donations, userProfile }) => {\r\n  // Calculate total blood donated (in ml)\r\n  const totalBloodDonated = donations.reduce((sum, donation) => sum + donation.blood_amount_ml, 0);\r\n  \r\n  // Calculate donations by type\r\n  const donationsByType = donations.reduce((acc, donation) => {\r\n    const type = donation.donation_type || 'Unknown';\r\n    acc[type] = (acc[type] || 0) + 1;\r\n    return acc;\r\n  }, {} as Record<string, number>);\r\n\r\n  // Calculate average interval between donations (in days)\r\n  const calculateAverageDonationInterval = () => {\r\n    if (donations.length < 2) return 'N/A';\r\n    \r\n    // Sort donations by date (oldest first)\r\n    const sortedDonations = [...donations].sort(\r\n      (a, b) => new Date(a.donation_date).getTime() - new Date(b.donation_date).getTime()\r\n    );\r\n    \r\n    let totalDays = 0;\r\n    for (let i = 1; i < sortedDonations.length; i++) {\r\n      const prevDate = new Date(sortedDonations[i - 1].donation_date);\r\n      const currDate = new Date(sortedDonations[i].donation_date);\r\n      const diffTime = Math.abs(currDate.getTime() - prevDate.getTime());\r\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n      totalDays += diffDays;\r\n    }\r\n    \r\n    const averageDays = Math.round(totalDays / (sortedDonations.length - 1));\r\n    return `${averageDays} days`;\r\n  };\r\n\r\n  // Calculate potential lives saved (rough estimate: 1 donation can save up to 3 lives)\r\n  const potentialLivesSaved = donations.length * 3;\r\n\r\n  return (\r\n    <div className=\"dashboard-card stats-card\">\r\n      <h2>Your Impact</h2>\r\n      <div className=\"stats-grid\">\r\n        <div className=\"stat-item\">\r\n          <div className=\"stat-value\">{userProfile?.donation_count || 0}</div>\r\n          <div className=\"stat-label\">Total Donations</div>\r\n        </div>\r\n        \r\n        <div className=\"stat-item\">\r\n          <div className=\"stat-value\">\r\n            {totalBloodDonated > 0 \r\n              ? `${(totalBloodDonated / 1000).toFixed(1)}L` \r\n              : '0L'}\r\n          </div>\r\n          <div className=\"stat-label\">Blood Donated</div>\r\n        </div>\r\n        \r\n        <div className=\"stat-item\">\r\n          <div className=\"stat-value\">{potentialLivesSaved}</div>\r\n          <div className=\"stat-label\">Lives Potentially Saved</div>\r\n        </div>\r\n        \r\n        <div className=\"stat-item\">\r\n          <div className=\"stat-value\">{calculateAverageDonationInterval()}</div>\r\n          <div className=\"stat-label\">Avg. Interval</div>\r\n        </div>\r\n      </div>\r\n\r\n      {Object.keys(donationsByType).length > 0 && (\r\n        <div className=\"donation-types\">\r\n          <h3>Donation Types</h3>\r\n          <ul className=\"donation-types-list\">\r\n            {Object.entries(donationsByType).map(([type, count]) => (\r\n              <li key={type}>\r\n                <span className=\"donation-type\">{type}</span>\r\n                <span className=\"donation-count\">{count}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserStats; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}